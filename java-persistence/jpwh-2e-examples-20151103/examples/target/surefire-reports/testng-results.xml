<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="216" passed="216">
  <reporter-output>
  </reporter-output>
  <suite name="AllTests - examples" duration-ms="104238" started-at="2015-12-19T20:05:20Z" finished-at="2015-12-19T20:07:04Z">
    <groups>
      <group name="MYSQL">
        <method signature="Locking.extendedLock()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="extendedLock" class="org.jpwh.test.concurrency.Locking"/>
        <method signature="CreateExecuteQueries.createNamedQueries()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="createNamedQueries" class="org.jpwh.test.querying.CreateExecuteQueries"/>
        <method signature="CreateExecuteQueries.namedQueries()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="namedQueries" class="org.jpwh.test.querying.CreateExecuteQueries"/>
        <method signature="CreateExecuteQueries.queryHints()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="queryHints" class="org.jpwh.test.querying.CreateExecuteQueries"/>
        <method signature="BulkStatementsSQL.bulkUpdate()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsSQL@7cbd213e]" name="bulkUpdate" class="org.jpwh.test.bulkbatch.BulkStatementsSQL"/>
        <method signature="BulkStatementsSQL.bulkUpdateHibernate()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsSQL@7cbd213e]" name="bulkUpdateHibernate" class="org.jpwh.test.bulkbatch.BulkStatementsSQL"/>
      </group> <!-- MYSQL -->
      <group name="H2">
        <method signature="SimpleTransitions.replicate()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="replicate" class="org.jpwh.test.simple.SimpleTransitions"/>
        <method signature="TablePerClass.jdbcBillingDetailsSqlQuery()[pri:0, instance:org.jpwh.test.inheritance.TablePerClass@23ceabc1]" name="jdbcBillingDetailsSqlQuery" class="org.jpwh.test.inheritance.TablePerClass"/>
        <method signature="GeneratedProperties.storeLoadLastModified()[pri:0, instance:org.jpwh.test.advanced.GeneratedProperties@482f8f11]" name="storeLoadLastModified" class="org.jpwh.test.advanced.GeneratedProperties"/>
        <method signature="CustomSchema.configurePersistenceUnit()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="configurePersistenceUnit" class="org.jpwh.test.complexschemas.CustomSchema"/>
        <method signature="CustomSchema.storeLoadCheckColumnInvalid()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="storeLoadCheckColumnInvalid" class="org.jpwh.test.complexschemas.CustomSchema"/>
        <method signature="CustomSchema.storeLoadCheckSingleRowInvalid()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="storeLoadCheckSingleRowInvalid" class="org.jpwh.test.complexschemas.CustomSchema"/>
        <method signature="CustomSchema.storeLoadCheckSubselectValid()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="storeLoadCheckSubselectValid" class="org.jpwh.test.complexschemas.CustomSchema"/>
        <method signature="CustomSchema.storeLoadDomainInvalid()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="storeLoadDomainInvalid" class="org.jpwh.test.complexschemas.CustomSchema"/>
        <method signature="CustomSchema.storeLoadUniqueMultiColumnValid()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="storeLoadUniqueMultiColumnValid" class="org.jpwh.test.complexschemas.CustomSchema"/>
        <method signature="CustomSchema.storeLoadValid()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="storeLoadValid" class="org.jpwh.test.complexschemas.CustomSchema"/>
        <method signature="Locking.extendedLock()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="extendedLock" class="org.jpwh.test.concurrency.Locking"/>
        <method signature="NonTransactional.autoCommit()[pri:0, instance:org.jpwh.test.concurrency.NonTransactional@544fe44c]" name="autoCommit" class="org.jpwh.test.concurrency.NonTransactional"/>
        <method signature="ExtendedPC.conversationCreateItem()[pri:0, instance:org.jpwh.test.conversation.ExtendedPC@4fe3c938]" name="conversationCreateItem" class="org.jpwh.test.conversation.ExtendedPC"/>
        <method signature="ExtendedPC.conversationEditItem()[pri:0, instance:org.jpwh.test.conversation.ExtendedPC@4fe3c938]" name="conversationEditItem" class="org.jpwh.test.conversation.ExtendedPC"/>
        <method signature="CreateExecuteQueries.createNamedQueries()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="createNamedQueries" class="org.jpwh.test.querying.CreateExecuteQueries"/>
        <method signature="CreateExecuteQueries.namedQueries()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="namedQueries" class="org.jpwh.test.querying.CreateExecuteQueries"/>
        <method signature="CreateExecuteQueries.queryHints()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="queryHints" class="org.jpwh.test.querying.CreateExecuteQueries"/>
        <method signature="HibernateSQLQueries.executeRecursiveQueries()[pri:0, instance:org.jpwh.test.querying.sql.HibernateSQLQueries@42f93a98]" name="executeRecursiveQueries" class="org.jpwh.test.querying.sql.HibernateSQLQueries"/>
        <method signature="NativeQueries.executeRecursiveQueries()[pri:0, instance:org.jpwh.test.querying.sql.NativeQueries@2c039ac6]" name="executeRecursiveQueries" class="org.jpwh.test.querying.sql.NativeQueries"/>
        <method signature="Projection.executeQueriesWithFunctions()[pri:0, instance:org.jpwh.test.querying.criteria.Projection@5bb21b69]" name="executeQueriesWithFunctions" class="org.jpwh.test.querying.criteria.Projection"/>
        <method signature="Projection.executeQueriesWithFunctions()[pri:0, instance:org.jpwh.test.querying.jpql.Projection@3d921e20]" name="executeQueriesWithFunctions" class="org.jpwh.test.querying.jpql.Projection"/>
        <method signature="Restriction.executeQueriesWithFunctions()[pri:0, instance:org.jpwh.test.querying.criteria.Restriction@3234e239]" name="executeQueriesWithFunctions" class="org.jpwh.test.querying.criteria.Restriction"/>
        <method signature="Restriction.executeQueriesWithFunctions()[pri:0, instance:org.jpwh.test.querying.jpql.Restriction@1d8d30f7]" name="executeQueriesWithFunctions" class="org.jpwh.test.querying.jpql.Restriction"/>
        <method signature="CustomSQL.readRestrictedCollection()[pri:0, instance:org.jpwh.test.customsql.CustomSQL@46daef40]" name="readRestrictedCollection" class="org.jpwh.test.customsql.CustomSQL"/>
        <method signature="BulkStatementsSQL.bulkUpdate()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsSQL@7cbd213e]" name="bulkUpdate" class="org.jpwh.test.bulkbatch.BulkStatementsSQL"/>
        <method signature="BulkStatementsSQL.bulkUpdateHibernate()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsSQL@7cbd213e]" name="bulkUpdateHibernate" class="org.jpwh.test.bulkbatch.BulkStatementsSQL"/>
      </group> <!-- H2 -->
      <group name="POSTGRESQL">
        <method signature="SimpleTransitions.replicate()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="replicate" class="org.jpwh.test.simple.SimpleTransitions"/>
        <method signature="TablePerClass.jdbcBillingDetailsSqlQuery()[pri:0, instance:org.jpwh.test.inheritance.TablePerClass@23ceabc1]" name="jdbcBillingDetailsSqlQuery" class="org.jpwh.test.inheritance.TablePerClass"/>
        <method signature="NonTransactional.autoCommit()[pri:0, instance:org.jpwh.test.concurrency.NonTransactional@544fe44c]" name="autoCommit" class="org.jpwh.test.concurrency.NonTransactional"/>
        <method signature="ExtendedPC.conversationCreateItem()[pri:0, instance:org.jpwh.test.conversation.ExtendedPC@4fe3c938]" name="conversationCreateItem" class="org.jpwh.test.conversation.ExtendedPC"/>
        <method signature="ExtendedPC.conversationEditItem()[pri:0, instance:org.jpwh.test.conversation.ExtendedPC@4fe3c938]" name="conversationEditItem" class="org.jpwh.test.conversation.ExtendedPC"/>
        <method signature="CustomSQL.readRestrictedCollection()[pri:0, instance:org.jpwh.test.customsql.CustomSQL@46daef40]" name="readRestrictedCollection" class="org.jpwh.test.customsql.CustomSQL"/>
        <method signature="BulkStatementsSQL.bulkUpdate()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsSQL@7cbd213e]" name="bulkUpdate" class="org.jpwh.test.bulkbatch.BulkStatementsSQL"/>
        <method signature="BulkStatementsSQL.bulkUpdateHibernate()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsSQL@7cbd213e]" name="bulkUpdateHibernate" class="org.jpwh.test.bulkbatch.BulkStatementsSQL"/>
      </group> <!-- POSTGRESQL -->
      <group name="ORACLE">
        <method signature="SimpleTransitions.replicate()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="replicate" class="org.jpwh.test.simple.SimpleTransitions"/>
        <method signature="Locking.extendedLock()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="extendedLock" class="org.jpwh.test.concurrency.Locking"/>
        <method signature="NonTransactional.autoCommit()[pri:0, instance:org.jpwh.test.concurrency.NonTransactional@544fe44c]" name="autoCommit" class="org.jpwh.test.concurrency.NonTransactional"/>
        <method signature="ExtendedPC.conversationCreateItem()[pri:0, instance:org.jpwh.test.conversation.ExtendedPC@4fe3c938]" name="conversationCreateItem" class="org.jpwh.test.conversation.ExtendedPC"/>
        <method signature="ExtendedPC.conversationEditItem()[pri:0, instance:org.jpwh.test.conversation.ExtendedPC@4fe3c938]" name="conversationEditItem" class="org.jpwh.test.conversation.ExtendedPC"/>
        <method signature="CreateExecuteQueries.createNamedQueries()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="createNamedQueries" class="org.jpwh.test.querying.CreateExecuteQueries"/>
        <method signature="CreateExecuteQueries.namedQueries()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="namedQueries" class="org.jpwh.test.querying.CreateExecuteQueries"/>
        <method signature="CreateExecuteQueries.queryHints()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="queryHints" class="org.jpwh.test.querying.CreateExecuteQueries"/>
      </group> <!-- ORACLE -->
    </groups>
    <test name="Hello World" duration-ms="999" started-at="2015-12-19T20:05:20Z" finished-at="2015-12-19T20:05:21Z">
      <class name="org.jpwh.helloworld.HelloWorldJPA">
        <test-method status="PASS" signature="storeLoadMessage()[pri:0, instance:org.jpwh.helloworld.HelloWorldJPA@3b81a1bc]" name="storeLoadMessage" duration-ms="271" started-at="2015-12-19T12:05:21Z" finished-at="2015-12-19T12:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadMessage -->
      </class> <!-- org.jpwh.helloworld.HelloWorldJPA -->
      <class name="org.jpwh.helloworld.HelloWorldHibernate">
        <test-method status="PASS" signature="storeLoadMessage()[pri:0, instance:org.jpwh.helloworld.HelloWorldHibernate@22f71333]" name="storeLoadMessage" duration-ms="725" started-at="2015-12-19T12:05:20Z" finished-at="2015-12-19T12:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadMessage -->
      </class> <!-- org.jpwh.helloworld.HelloWorldHibernate -->
    </test> <!-- Hello World -->
    <test name="Simple Mappings" duration-ms="4579" started-at="2015-12-19T20:05:21Z" finished-at="2015-12-19T20:05:26Z">
      <class name="org.jpwh.test.simple.CRUD">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.simple.CRUD@6574b225]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:24Z" finished-at="2015-12-19T12:05:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.CRUD@6574b225]" name="beforeMethod" is-config="true" duration-ms="90" started-at="2015-12-19T12:05:24Z" finished-at="2015-12-19T12:05:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeAndQueryItems()[pri:0, instance:org.jpwh.test.simple.CRUD@6574b225]" name="storeAndQueryItems" duration-ms="6" started-at="2015-12-19T12:05:24Z" finished-at="2015-12-19T12:05:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndQueryItems -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.CRUD@6574b225]" name="afterMethod" is-config="true" duration-ms="30" started-at="2015-12-19T12:05:24Z" finished-at="2015-12-19T12:05:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.simple.CRUD -->
      <class name="org.jpwh.test.simple.CRUDMetadataXML">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.CRUDMetadataXML@61a485d2]" name="beforeMethod" is-config="true" duration-ms="80" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.simple.CRUDMetadataXML@61a485d2]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeAndQueryItems()[pri:0, instance:org.jpwh.test.simple.CRUDMetadataXML@61a485d2]" name="storeAndQueryItems" duration-ms="6" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndQueryItems -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.CRUDMetadataXML@61a485d2]" name="afterMethod" is-config="true" duration-ms="28" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.simple.CRUDMetadataXML -->
      <class name="org.jpwh.test.simple.SimpleTransitions">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="beforeMethod" is-config="true" duration-ms="219" started-at="2015-12-19T12:05:22Z" finished-at="2015-12-19T12:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:22Z" finished-at="2015-12-19T12:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="basicUOW()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="basicUOW" duration-ms="7" started-at="2015-12-19T12:05:22Z" finished-at="2015-12-19T12:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicUOW -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="afterMethod" is-config="true" duration-ms="52" started-at="2015-12-19T12:05:22Z" finished-at="2015-12-19T12:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="beforeMethod" is-config="true" duration-ms="161" started-at="2015-12-19T12:05:22Z" finished-at="2015-12-19T12:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="detach()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="detach" duration-ms="11" started-at="2015-12-19T12:05:22Z" finished-at="2015-12-19T12:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detach -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="afterMethod" is-config="true" duration-ms="43" started-at="2015-12-19T12:05:22Z" finished-at="2015-12-19T12:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="beforeMethod" is-config="true" duration-ms="125" started-at="2015-12-19T12:05:22Z" finished-at="2015-12-19T12:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="flushModeType()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="flushModeType" duration-ms="14" started-at="2015-12-19T12:05:22Z" finished-at="2015-12-19T12:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushModeType -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="afterMethod" is-config="true" duration-ms="42" started-at="2015-12-19T12:05:22Z" finished-at="2015-12-19T12:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="beforeMethod" is-config="true" duration-ms="141" started-at="2015-12-19T12:05:22Z" finished-at="2015-12-19T12:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="makePersistent()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="makePersistent" duration-ms="6" started-at="2015-12-19T12:05:23Z" finished-at="2015-12-19T12:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makePersistent -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="afterMethod" is-config="true" duration-ms="42" started-at="2015-12-19T12:05:23Z" finished-at="2015-12-19T12:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="beforeMethod" is-config="true" duration-ms="125" started-at="2015-12-19T12:05:23Z" finished-at="2015-12-19T12:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="makeTransient()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="makeTransient" duration-ms="8" started-at="2015-12-19T12:05:23Z" finished-at="2015-12-19T12:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeTransient -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="afterMethod" is-config="true" duration-ms="39" started-at="2015-12-19T12:05:23Z" finished-at="2015-12-19T12:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="beforeMethod" is-config="true" duration-ms="109" started-at="2015-12-19T12:05:23Z" finished-at="2015-12-19T12:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="mergeDetached()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="mergeDetached" duration-ms="10" started-at="2015-12-19T12:05:23Z" finished-at="2015-12-19T12:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mergeDetached -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="afterMethod" is-config="true" duration-ms="58" started-at="2015-12-19T12:05:23Z" finished-at="2015-12-19T12:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="beforeMethod" is-config="true" duration-ms="109" started-at="2015-12-19T12:05:23Z" finished-at="2015-12-19T12:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="refresh()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="refresh" duration-ms="12" started-at="2015-12-19T12:05:23Z" finished-at="2015-12-19T12:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refresh -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="afterMethod" is-config="true" duration-ms="35" started-at="2015-12-19T12:05:23Z" finished-at="2015-12-19T12:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="beforeMethod" is-config="true" duration-ms="102" started-at="2015-12-19T12:05:23Z" finished-at="2015-12-19T12:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="replicate()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="replicate" duration-ms="10" started-at="2015-12-19T12:05:23Z" finished-at="2015-12-19T12:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- replicate -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="afterMethod" is-config="true" duration-ms="33" started-at="2015-12-19T12:05:23Z" finished-at="2015-12-19T12:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="beforeMethod" is-config="true" duration-ms="95" started-at="2015-12-19T12:05:23Z" finished-at="2015-12-19T12:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="retrievePersistent()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="retrievePersistent" duration-ms="9" started-at="2015-12-19T12:05:23Z" finished-at="2015-12-19T12:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- retrievePersistent -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="afterMethod" is-config="true" duration-ms="39" started-at="2015-12-19T12:05:23Z" finished-at="2015-12-19T12:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="beforeMethod" is-config="true" duration-ms="139" started-at="2015-12-19T12:05:23Z" finished-at="2015-12-19T12:05:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="retrievePersistentReference()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="retrievePersistentReference" duration-ms="11" started-at="2015-12-19T12:05:24Z" finished-at="2015-12-19T12:05:24Z">
          <exception class="org.hibernate.LazyInitializationException">
            <message>
              <![CDATA[could not initialize proxy - no Session]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.hibernate.LazyInitializationException: could not initialize proxy - no Session
	at org.hibernate.proxy.AbstractLazyInitializer.initialize(AbstractLazyInitializer.java:148)
	at org.hibernate.proxy.AbstractLazyInitializer.getImplementation(AbstractLazyInitializer.java:266)
	at org.hibernate.proxy.pojo.javassist.JavassistLazyInitializer.invoke(JavassistLazyInitializer.java:68)
	at org.jpwh.model.simple.Item_$$_jvst38e_1.getName(Item_$$_jvst38e_1.java)
	at org.jpwh.test.simple.SimpleTransitions.retrievePersistentReference(SimpleTransitions.java:203)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
]]>
            </full-stacktrace>
          </exception> <!-- org.hibernate.LazyInitializationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- retrievePersistentReference -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="afterMethod" is-config="true" duration-ms="34" started-at="2015-12-19T12:05:24Z" finished-at="2015-12-19T12:05:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="beforeMethod" is-config="true" duration-ms="93" started-at="2015-12-19T12:05:24Z" finished-at="2015-12-19T12:05:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="scopeOfIdentity()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="scopeOfIdentity" duration-ms="6" started-at="2015-12-19T12:05:24Z" finished-at="2015-12-19T12:05:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scopeOfIdentity -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.SimpleTransitions@4590c9c3]" name="afterMethod" is-config="true" duration-ms="34" started-at="2015-12-19T12:05:24Z" finished-at="2015-12-19T12:05:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.simple.SimpleTransitions -->
      <class name="org.jpwh.test.simple.CRUDMetadataHBMXML">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.simple.CRUDMetadataHBMXML@7946e1f4]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:24Z" finished-at="2015-12-19T12:05:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.CRUDMetadataHBMXML@7946e1f4]" name="beforeMethod" is-config="true" duration-ms="742" started-at="2015-12-19T12:05:24Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeAndQueryItems()[pri:0, instance:org.jpwh.test.simple.CRUDMetadataHBMXML@7946e1f4]" name="storeAndQueryItems" duration-ms="9" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndQueryItems -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.CRUDMetadataHBMXML@7946e1f4]" name="afterMethod" is-config="true" duration-ms="59" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.simple.CRUDMetadataHBMXML -->
      <class name="org.jpwh.test.simple.AccessJPAMetamodel">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.AccessJPAMetamodel@59e84876]" name="beforeMethod" is-config="true" duration-ms="307" started-at="2015-12-19T12:05:21Z" finished-at="2015-12-19T12:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.simple.AccessJPAMetamodel@59e84876]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:21Z" finished-at="2015-12-19T12:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.AccessJPAMetamodel@59e84876]" name="afterMethod" is-config="true" duration-ms="48" started-at="2015-12-19T12:05:21Z" finished-at="2015-12-19T12:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="accessDynamicMetamodel()[pri:0, instance:org.jpwh.test.simple.AccessJPAMetamodel@59e84876]" name="accessDynamicMetamodel" duration-ms="0" started-at="2015-12-19T12:05:21Z" finished-at="2015-12-19T12:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessDynamicMetamodel -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.AccessJPAMetamodel@59e84876]" name="beforeMethod" is-config="true" duration-ms="145" started-at="2015-12-19T12:05:21Z" finished-at="2015-12-19T12:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="accessStaticMetamodel()[pri:0, instance:org.jpwh.test.simple.AccessJPAMetamodel@59e84876]" name="accessStaticMetamodel" duration-ms="1" started-at="2015-12-19T12:05:21Z" finished-at="2015-12-19T12:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessStaticMetamodel -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.AccessJPAMetamodel@59e84876]" name="afterMethod" is-config="true" duration-ms="63" started-at="2015-12-19T12:05:21Z" finished-at="2015-12-19T12:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.AccessJPAMetamodel@59e84876]" name="beforeMethod" is-config="true" duration-ms="121" started-at="2015-12-19T12:05:22Z" finished-at="2015-12-19T12:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="queryStaticMetamodel()[pri:0, instance:org.jpwh.test.simple.AccessJPAMetamodel@59e84876]" name="queryStaticMetamodel" duration-ms="48" started-at="2015-12-19T12:05:22Z" finished-at="2015-12-19T12:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queryStaticMetamodel -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.AccessJPAMetamodel@59e84876]" name="afterMethod" is-config="true" duration-ms="36" started-at="2015-12-19T12:05:22Z" finished-at="2015-12-19T12:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.simple.AccessJPAMetamodel -->
      <class name="org.jpwh.test.simple.MappingManyToOne">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.simple.MappingManyToOne@39fb3ab6]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.MappingManyToOne@39fb3ab6]" name="beforeMethod" is-config="true" duration-ms="122" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeAndLoadBids()[pri:0, instance:org.jpwh.test.simple.MappingManyToOne@39fb3ab6]" name="storeAndLoadBids" duration-ms="10" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadBids -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.MappingManyToOne@39fb3ab6]" name="afterMethod" is-config="true" duration-ms="42" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.simple.MappingManyToOne -->
      <class name="org.jpwh.test.simple.ModelOperations">
        <test-method status="PASS" signature="validateItem()[pri:0, instance:org.jpwh.test.simple.ModelOperations@6276ae34]" name="validateItem" duration-ms="11" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateItem -->
        <test-method status="PASS" signature="linkBidAndItem()[pri:0, instance:org.jpwh.test.simple.ModelOperations@6276ae34]" name="linkBidAndItem" duration-ms="0" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- linkBidAndItem -->
      </class> <!-- org.jpwh.test.simple.ModelOperations -->
      <class name="org.jpwh.test.simple.CRUDMetadataOverrideXML">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.simple.CRUDMetadataOverrideXML@2669b199]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.CRUDMetadataOverrideXML@2669b199]" name="beforeMethod" is-config="true" duration-ms="93" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checkMetadataOverride()[pri:0, instance:org.jpwh.test.simple.CRUDMetadataOverrideXML@2669b199]" name="checkMetadataOverride" duration-ms="0" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkMetadataOverride -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.CRUDMetadataOverrideXML@2669b199]" name="afterMethod" is-config="true" duration-ms="31" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.CRUDMetadataOverrideXML@2669b199]" name="beforeMethod" is-config="true" duration-ms="92" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeAndQueryItems()[pri:0, instance:org.jpwh.test.simple.CRUDMetadataOverrideXML@2669b199]" name="storeAndQueryItems" duration-ms="7" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndQueryItems -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.CRUDMetadataOverrideXML@2669b199]" name="afterMethod" is-config="true" duration-ms="29" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.simple.CRUDMetadataOverrideXML -->
      <class name="org.jpwh.test.simple.MappingEmbeddables">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.MappingEmbeddables@5056dfcb]" name="beforeMethod" is-config="true" duration-ms="147" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.simple.MappingEmbeddables@5056dfcb]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeAndLoadInvalidUsers()[pri:0, instance:org.jpwh.test.simple.MappingEmbeddables@5056dfcb]" name="storeAndLoadInvalidUsers" duration-ms="9" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <exception class="org.hibernate.exception.ConstraintViolationException">
            <message>
              <![CDATA[could not execute statement]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:112)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:109)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:95)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:207)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:45)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2823)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3323)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:89)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:447)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:333)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:335)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1224)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.flush(AbstractEntityManagerImpl.java:1300)
	at org.jpwh.test.simple.MappingEmbeddables.storeAndLoadInvalidUsers(MappingEmbeddables.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
Caused by: org.h2.jdbc.JdbcSQLException: NULL not allowed for column "CITY"; SQL statement:
/* insert org.jpwh.model.simple.User */ insert into USERS (BILLING_CITY, BILLING_STREET, BILLING_ZIPCODE, city, street, zipcode, username, id) values (?, ?, ?, ?, ?, ?, ?, ?) [23502-171]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:293)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:692)
	at org.h2.command.dml.Insert.insertRows(Insert.java:120)
	at org.h2.command.dml.Insert.update(Insert.java:84)
	at org.h2.command.CommandContainer.update(CommandContainer.java:75)
	at org.h2.command.Command.executeUpdate(Command.java:230)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:156)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:142)
	at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at bitronix.tm.resource.jdbc.BaseProxyHandlerClass.invoke(BaseProxyHandlerClass.java:64)
	at com.sun.proxy.$Proxy18.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:204)
	... 44 more
]]>
            </full-stacktrace>
          </exception> <!-- org.hibernate.exception.ConstraintViolationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadInvalidUsers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.MappingEmbeddables@5056dfcb]" name="afterMethod" is-config="true" duration-ms="30" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.simple.MappingEmbeddables@5056dfcb]" name="beforeMethod" is-config="true" duration-ms="113" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeAndLoadUsers()[pri:0, instance:org.jpwh.test.simple.MappingEmbeddables@5056dfcb]" name="storeAndLoadUsers" duration-ms="3" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadUsers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.simple.MappingEmbeddables@5056dfcb]" name="afterMethod" is-config="true" duration-ms="42" started-at="2015-12-19T12:05:25Z" finished-at="2015-12-19T12:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.simple.MappingEmbeddables -->
    </test> <!-- Simple Mappings -->
    <test name="Inheritance Mappings" duration-ms="4951" started-at="2015-12-19T20:05:26Z" finished-at="2015-12-19T20:05:31Z">
      <class name="org.jpwh.test.inheritance.Joined">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.inheritance.Joined@4439f31e]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.Joined@4439f31e]" name="beforeMethod" is-config="true" duration-ms="87" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeBillingDetailsLoadCreditCards()[pri:0, instance:org.jpwh.test.inheritance.Joined@4439f31e]" name="storeBillingDetailsLoadCreditCards" duration-ms="7" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeBillingDetailsLoadCreditCards -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.Joined@4439f31e]" name="afterMethod" is-config="true" duration-ms="26" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.Joined@4439f31e]" name="beforeMethod" is-config="true" duration-ms="78" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="jdbcBillingDetailsSqlQuery()[pri:0, instance:org.jpwh.test.inheritance.Joined@4439f31e]" name="jdbcBillingDetailsSqlQuery" duration-ms="8" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jdbcBillingDetailsSqlQuery -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.Joined@4439f31e]" name="afterMethod" is-config="true" duration-ms="69" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.Joined@4439f31e]" name="beforeMethod" is-config="true" duration-ms="77" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="jdbcCreditCardSqlQuery()[pri:0, instance:org.jpwh.test.inheritance.Joined@4439f31e]" name="jdbcCreditCardSqlQuery" duration-ms="7" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jdbcCreditCardSqlQuery -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.Joined@4439f31e]" name="afterMethod" is-config="true" duration-ms="24" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.Joined@4439f31e]" name="beforeMethod" is-config="true" duration-ms="74" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadBillingDetails()[pri:0, instance:org.jpwh.test.inheritance.Joined@4439f31e]" name="storeLoadBillingDetails" duration-ms="7" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadBillingDetails -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.Joined@4439f31e]" name="afterMethod" is-config="true" duration-ms="26" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.inheritance.Joined -->
      <class name="org.jpwh.test.inheritance.TablePerClass">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.TablePerClass@23ceabc1]" name="beforeMethod" is-config="true" duration-ms="74" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.inheritance.TablePerClass@23ceabc1]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeBillingDetailsLoadCreditCards()[pri:0, instance:org.jpwh.test.inheritance.TablePerClass@23ceabc1]" name="storeBillingDetailsLoadCreditCards" duration-ms="5" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeBillingDetailsLoadCreditCards -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.TablePerClass@23ceabc1]" name="afterMethod" is-config="true" duration-ms="27" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.TablePerClass@23ceabc1]" name="beforeMethod" is-config="true" duration-ms="83" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="jdbcBillingDetailsSqlQuery()[pri:0, instance:org.jpwh.test.inheritance.TablePerClass@23ceabc1]" name="jdbcBillingDetailsSqlQuery" duration-ms="6" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jdbcBillingDetailsSqlQuery -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.TablePerClass@23ceabc1]" name="afterMethod" is-config="true" duration-ms="89" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.TablePerClass@23ceabc1]" name="beforeMethod" is-config="true" duration-ms="68" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadBillingDetails()[pri:0, instance:org.jpwh.test.inheritance.TablePerClass@23ceabc1]" name="storeLoadBillingDetails" duration-ms="5" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadBillingDetails -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.TablePerClass@23ceabc1]" name="afterMethod" is-config="true" duration-ms="21" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.inheritance.TablePerClass -->
      <class name="org.jpwh.test.inheritance.PolymorphicOneToMany">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.inheritance.PolymorphicOneToMany@5dfcfece]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:29Z" finished-at="2015-12-19T12:05:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.PolymorphicOneToMany@5dfcfece]" name="beforeMethod" is-config="true" duration-ms="170" started-at="2015-12-19T12:05:29Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeAndLoadItemBids()[pri:0, instance:org.jpwh.test.inheritance.PolymorphicOneToMany@5dfcfece]" name="storeAndLoadItemBids" duration-ms="28" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadItemBids -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.PolymorphicOneToMany@5dfcfece]" name="afterMethod" is-config="true" duration-ms="33" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.inheritance.PolymorphicOneToMany -->
      <class name="org.jpwh.test.inheritance.Embeddable">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.Embeddable@6cc4c815]" name="beforeMethod" is-config="true" duration-ms="73" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.inheritance.Embeddable@6cc4c815]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeAndLoad()[pri:0, instance:org.jpwh.test.inheritance.Embeddable@6cc4c815]" name="storeAndLoad" duration-ms="8" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoad -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.Embeddable@6cc4c815]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.inheritance.Embeddable -->
      <class name="org.jpwh.test.inheritance.MixedFetchSelect">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.MixedFetchSelect@5d5eef3d]" name="beforeMethod" is-config="true" duration-ms="568" started-at="2015-12-19T12:05:27Z" finished-at="2015-12-19T12:05:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.inheritance.MixedFetchSelect@5d5eef3d]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:27Z" finished-at="2015-12-19T12:05:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeBillingDetailsLoadCreditCards()[pri:0, instance:org.jpwh.test.inheritance.MixedFetchSelect@5d5eef3d]" name="storeBillingDetailsLoadCreditCards" duration-ms="9" started-at="2015-12-19T12:05:28Z" finished-at="2015-12-19T12:05:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeBillingDetailsLoadCreditCards -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.MixedFetchSelect@5d5eef3d]" name="afterMethod" is-config="true" duration-ms="176" started-at="2015-12-19T12:05:28Z" finished-at="2015-12-19T12:05:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.MixedFetchSelect@5d5eef3d]" name="beforeMethod" is-config="true" duration-ms="480" started-at="2015-12-19T12:05:28Z" finished-at="2015-12-19T12:05:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="jdbcBillingDetailsSqlQuery()[pri:0, instance:org.jpwh.test.inheritance.MixedFetchSelect@5d5eef3d]" name="jdbcBillingDetailsSqlQuery" duration-ms="7" started-at="2015-12-19T12:05:28Z" finished-at="2015-12-19T12:05:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jdbcBillingDetailsSqlQuery -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.MixedFetchSelect@5d5eef3d]" name="afterMethod" is-config="true" duration-ms="203" started-at="2015-12-19T12:05:28Z" finished-at="2015-12-19T12:05:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.MixedFetchSelect@5d5eef3d]" name="beforeMethod" is-config="true" duration-ms="582" started-at="2015-12-19T12:05:28Z" finished-at="2015-12-19T12:05:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadBillingDetails()[pri:0, instance:org.jpwh.test.inheritance.MixedFetchSelect@5d5eef3d]" name="storeLoadBillingDetails" duration-ms="5" started-at="2015-12-19T12:05:29Z" finished-at="2015-12-19T12:05:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadBillingDetails -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.MixedFetchSelect@5d5eef3d]" name="afterMethod" is-config="true" duration-ms="225" started-at="2015-12-19T12:05:29Z" finished-at="2015-12-19T12:05:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.inheritance.MixedFetchSelect -->
      <class name="org.jpwh.test.inheritance.MappedSuperclass">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.MappedSuperclass@3a82f6ef]" name="beforeMethod" is-config="true" duration-ms="72" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.inheritance.MappedSuperclass@3a82f6ef]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeBillingDetailsLoadCreditCards()[pri:0, instance:org.jpwh.test.inheritance.MappedSuperclass@3a82f6ef]" name="storeBillingDetailsLoadCreditCards" duration-ms="6" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeBillingDetailsLoadCreditCards -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.MappedSuperclass@3a82f6ef]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.MappedSuperclass@3a82f6ef]" name="beforeMethod" is-config="true" duration-ms="67" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="jdbcSqlQueryBankAccount()[pri:0, instance:org.jpwh.test.inheritance.MappedSuperclass@3a82f6ef]" name="jdbcSqlQueryBankAccount" duration-ms="7" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jdbcSqlQueryBankAccount -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.MappedSuperclass@3a82f6ef]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.MappedSuperclass@3a82f6ef]" name="beforeMethod" is-config="true" duration-ms="70" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="jdbcSqlQueryCreditCard()[pri:0, instance:org.jpwh.test.inheritance.MappedSuperclass@3a82f6ef]" name="jdbcSqlQueryCreditCard" duration-ms="8" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jdbcSqlQueryCreditCard -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.MappedSuperclass@3a82f6ef]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.MappedSuperclass@3a82f6ef]" name="beforeMethod" is-config="true" duration-ms="71" started-at="2015-12-19T12:05:26Z" finished-at="2015-12-19T12:05:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadBillingDetails()[pri:0, instance:org.jpwh.test.inheritance.MappedSuperclass@3a82f6ef]" name="storeLoadBillingDetails" duration-ms="5" started-at="2015-12-19T12:05:27Z" finished-at="2015-12-19T12:05:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadBillingDetails -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.MappedSuperclass@3a82f6ef]" name="afterMethod" is-config="true" duration-ms="24" started-at="2015-12-19T12:05:27Z" finished-at="2015-12-19T12:05:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.inheritance.MappedSuperclass -->
      <class name="org.jpwh.test.inheritance.Mixed">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.inheritance.Mixed@56f4468b]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:27Z" finished-at="2015-12-19T12:05:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.Mixed@56f4468b]" name="beforeMethod" is-config="true" duration-ms="94" started-at="2015-12-19T12:05:27Z" finished-at="2015-12-19T12:05:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeBillingDetailsLoadCreditCards()[pri:0, instance:org.jpwh.test.inheritance.Mixed@56f4468b]" name="storeBillingDetailsLoadCreditCards" duration-ms="6" started-at="2015-12-19T12:05:27Z" finished-at="2015-12-19T12:05:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeBillingDetailsLoadCreditCards -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.Mixed@56f4468b]" name="afterMethod" is-config="true" duration-ms="33" started-at="2015-12-19T12:05:27Z" finished-at="2015-12-19T12:05:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.Mixed@56f4468b]" name="beforeMethod" is-config="true" duration-ms="136" started-at="2015-12-19T12:05:27Z" finished-at="2015-12-19T12:05:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="jdbcBillingDetailsSqlQuery()[pri:0, instance:org.jpwh.test.inheritance.Mixed@56f4468b]" name="jdbcBillingDetailsSqlQuery" duration-ms="7" started-at="2015-12-19T12:05:27Z" finished-at="2015-12-19T12:05:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jdbcBillingDetailsSqlQuery -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.Mixed@56f4468b]" name="afterMethod" is-config="true" duration-ms="36" started-at="2015-12-19T12:05:27Z" finished-at="2015-12-19T12:05:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.Mixed@56f4468b]" name="beforeMethod" is-config="true" duration-ms="104" started-at="2015-12-19T12:05:27Z" finished-at="2015-12-19T12:05:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadBillingDetails()[pri:0, instance:org.jpwh.test.inheritance.Mixed@56f4468b]" name="storeLoadBillingDetails" duration-ms="6" started-at="2015-12-19T12:05:27Z" finished-at="2015-12-19T12:05:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadBillingDetails -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.Mixed@56f4468b]" name="afterMethod" is-config="true" duration-ms="28" started-at="2015-12-19T12:05:27Z" finished-at="2015-12-19T12:05:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.inheritance.Mixed -->
      <class name="org.jpwh.test.inheritance.PolymorphicManyToOne">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.PolymorphicManyToOne@643b1d11]" name="beforeMethod" is-config="true" duration-ms="79" started-at="2015-12-19T12:05:29Z" finished-at="2015-12-19T12:05:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.inheritance.PolymorphicManyToOne@643b1d11]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:29Z" finished-at="2015-12-19T12:05:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeAndLoadItemBids()[pri:0, instance:org.jpwh.test.inheritance.PolymorphicManyToOne@643b1d11]" name="storeAndLoadItemBids" duration-ms="9" started-at="2015-12-19T12:05:29Z" finished-at="2015-12-19T12:05:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadItemBids -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.PolymorphicManyToOne@643b1d11]" name="afterMethod" is-config="true" duration-ms="27" started-at="2015-12-19T12:05:29Z" finished-at="2015-12-19T12:05:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.inheritance.PolymorphicManyToOne -->
      <class name="org.jpwh.test.inheritance.SingleTable">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.inheritance.SingleTable@100fc185]" name="beforeClass" is-config="true" duration-ms="1" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.SingleTable@100fc185]" name="beforeMethod" is-config="true" duration-ms="111" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeBillingDetailsLoadCreditCards()[pri:0, instance:org.jpwh.test.inheritance.SingleTable@100fc185]" name="storeBillingDetailsLoadCreditCards" duration-ms="7" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeBillingDetailsLoadCreditCards -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.SingleTable@100fc185]" name="afterMethod" is-config="true" duration-ms="41" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.SingleTable@100fc185]" name="beforeMethod" is-config="true" duration-ms="106" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="jdbcBillingDetailsSqlQuery()[pri:0, instance:org.jpwh.test.inheritance.SingleTable@100fc185]" name="jdbcBillingDetailsSqlQuery" duration-ms="6" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jdbcBillingDetailsSqlQuery -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.SingleTable@100fc185]" name="afterMethod" is-config="true" duration-ms="30" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.SingleTable@100fc185]" name="beforeMethod" is-config="true" duration-ms="72" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="jdbcCreditCardSqlQuery()[pri:0, instance:org.jpwh.test.inheritance.SingleTable@100fc185]" name="jdbcCreditCardSqlQuery" duration-ms="7" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jdbcCreditCardSqlQuery -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.SingleTable@100fc185]" name="afterMethod" is-config="true" duration-ms="37" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.inheritance.SingleTable@100fc185]" name="beforeMethod" is-config="true" duration-ms="82" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadBillingDetails()[pri:0, instance:org.jpwh.test.inheritance.SingleTable@100fc185]" name="storeLoadBillingDetails" duration-ms="5" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadBillingDetails -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.inheritance.SingleTable@100fc185]" name="afterMethod" is-config="true" duration-ms="21" started-at="2015-12-19T12:05:30Z" finished-at="2015-12-19T12:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.inheritance.SingleTable -->
    </test> <!-- Inheritance Mappings -->
    <test name="Advanced Mappings" duration-ms="1751" started-at="2015-12-19T20:05:31Z" finished-at="2015-12-19T20:05:32Z">
      <class name="org.jpwh.test.advanced.GeneratedProperties">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.advanced.GeneratedProperties@482f8f11]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.advanced.GeneratedProperties@482f8f11]" name="beforeMethod" is-config="true" duration-ms="83" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadInitialPrice()[pri:0, instance:org.jpwh.test.advanced.GeneratedProperties@482f8f11]" name="storeLoadInitialPrice" duration-ms="9" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadInitialPrice -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.advanced.GeneratedProperties@482f8f11]" name="afterMethod" is-config="true" duration-ms="28" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.advanced.GeneratedProperties@482f8f11]" name="beforeMethod" is-config="true" duration-ms="71" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadLastModified()[pri:0, instance:org.jpwh.test.advanced.GeneratedProperties@482f8f11]" name="storeLoadLastModified" duration-ms="9" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadLastModified -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.advanced.GeneratedProperties@482f8f11]" name="afterMethod" is-config="true" duration-ms="25" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.advanced.GeneratedProperties -->
      <class name="org.jpwh.test.advanced.TransformingColumns">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.advanced.TransformingColumns@5c7fa833]" name="beforeMethod" is-config="true" duration-ms="70" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.advanced.TransformingColumns@5c7fa833]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeLoadTransform()[pri:0, instance:org.jpwh.test.advanced.TransformingColumns@5c7fa833]" name="storeLoadTransform" duration-ms="9" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadTransform -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.advanced.TransformingColumns@5c7fa833]" name="afterMethod" is-config="true" duration-ms="24" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.advanced.TransformingColumns -->
      <class name="org.jpwh.test.advanced.AccessType">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.advanced.AccessType@457e2f02]" name="beforeMethod" is-config="true" duration-ms="108" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.advanced.AccessType@457e2f02]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeLoadAccessType()[pri:0, instance:org.jpwh.test.advanced.AccessType@457e2f02]" name="storeLoadAccessType" duration-ms="13" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadAccessType -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.advanced.AccessType@457e2f02]" name="afterMethod" is-config="true" duration-ms="36" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.advanced.AccessType -->
      <class name="org.jpwh.test.advanced.Temporal">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.advanced.Temporal@1b604f19]" name="beforeMethod" is-config="true" duration-ms="68" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.advanced.Temporal@1b604f19]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeLoadTemporal()[pri:0, instance:org.jpwh.test.advanced.Temporal@1b604f19]" name="storeLoadTemporal" duration-ms="4" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadTemporal -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.advanced.Temporal@1b604f19]" name="afterMethod" is-config="true" duration-ms="24" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.advanced.Temporal -->
      <class name="org.jpwh.test.advanced.Enum">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.advanced.Enum@1593948d]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.advanced.Enum@1593948d]" name="beforeMethod" is-config="true" duration-ms="70" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadEnum()[pri:0, instance:org.jpwh.test.advanced.Enum@1593948d]" name="storeLoadEnum" duration-ms="4" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadEnum -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.advanced.Enum@1593948d]" name="afterMethod" is-config="true" duration-ms="23" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.advanced.Enum -->
      <class name="org.jpwh.test.converter.UserTypes">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.converter.UserTypes@7823a2f9]" name="beforeMethod" is-config="true" duration-ms="65" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.converter.UserTypes@7823a2f9]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeLoadMonetaryAmount()[pri:0, instance:org.jpwh.test.converter.UserTypes@7823a2f9]" name="storeLoadMonetaryAmount" duration-ms="7" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadMonetaryAmount -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.converter.UserTypes@7823a2f9]" name="afterMethod" is-config="true" duration-ms="19" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.converter.UserTypes -->
      <class name="org.jpwh.test.advanced.BooleanOverride">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.advanced.BooleanOverride@675d3402]" name="beforeMethod" is-config="true" duration-ms="140" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.advanced.BooleanOverride@675d3402]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="configurePersistenceUnit()[pri:0, instance:org.jpwh.test.advanced.BooleanOverride@675d3402]" name="configurePersistenceUnit" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configurePersistenceUnit -->
        <test-method status="PASS" signature="storeLoadOverride()[pri:0, instance:org.jpwh.test.advanced.BooleanOverride@675d3402]" name="storeLoadOverride" duration-ms="6" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadOverride -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.advanced.BooleanOverride@675d3402]" name="afterMethod" is-config="true" duration-ms="34" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.advanced.BooleanOverride -->
      <class name="org.jpwh.test.advanced.LazyProperties">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.advanced.LazyProperties@39aeed2f]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.advanced.LazyProperties@39aeed2f]" name="beforeMethod" is-config="true" duration-ms="69" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadLocator()[pri:0, instance:org.jpwh.test.advanced.LazyProperties@39aeed2f]" name="storeLoadLocator" duration-ms="17" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadLocator -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.advanced.LazyProperties@39aeed2f]" name="afterMethod" is-config="true" duration-ms="24" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.advanced.LazyProperties@39aeed2f]" name="beforeMethod" is-config="true" duration-ms="71" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadProperties()[pri:0, instance:org.jpwh.test.advanced.LazyProperties@39aeed2f]" name="storeLoadProperties" duration-ms="5" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadProperties -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.advanced.LazyProperties@39aeed2f]" name="afterMethod" is-config="true" duration-ms="24" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.advanced.LazyProperties -->
      <class name="org.jpwh.test.advanced.DerivedProperties">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.advanced.DerivedProperties@51565ec2]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.advanced.DerivedProperties@51565ec2]" name="beforeMethod" is-config="true" duration-ms="69" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadFormula()[pri:0, instance:org.jpwh.test.advanced.DerivedProperties@51565ec2]" name="storeLoadFormula" duration-ms="5" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadFormula -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.advanced.DerivedProperties@51565ec2]" name="afterMethod" is-config="true" duration-ms="23" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.advanced.DerivedProperties@51565ec2]" name="beforeMethod" is-config="true" duration-ms="67" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadFormulaSubselect()[pri:0, instance:org.jpwh.test.advanced.DerivedProperties@51565ec2]" name="storeLoadFormulaSubselect" duration-ms="5" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadFormulaSubselect -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.advanced.DerivedProperties@51565ec2]" name="afterMethod" is-config="true" duration-ms="23" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.advanced.DerivedProperties -->
      <class name="org.jpwh.test.advanced.NestedComponents">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.advanced.NestedComponents@4cc0edeb]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.advanced.NestedComponents@4cc0edeb]" name="beforeMethod" is-config="true" duration-ms="71" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeAndLoadUsers()[pri:0, instance:org.jpwh.test.advanced.NestedComponents@4cc0edeb]" name="storeAndLoadUsers" duration-ms="2" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadUsers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.advanced.NestedComponents@4cc0edeb]" name="afterMethod" is-config="true" duration-ms="23" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.advanced.NestedComponents -->
      <class name="org.jpwh.test.converter.Converters">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.converter.Converters@724af044]" name="beforeMethod" is-config="true" duration-ms="71" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.converter.Converters@724af044]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeAndLoadZipcode()[pri:0, instance:org.jpwh.test.converter.Converters@724af044]" name="storeAndLoadZipcode" duration-ms="7" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadZipcode -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.converter.Converters@724af044]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.converter.Converters@724af044]" name="beforeMethod" is-config="true" duration-ms="62" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadMonetaryAmount()[pri:0, instance:org.jpwh.test.converter.Converters@724af044]" name="storeLoadMonetaryAmount" duration-ms="17" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadMonetaryAmount -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.converter.Converters@724af044]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:31Z" finished-at="2015-12-19T12:05:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.converter.Converters -->
      <class name="org.jpwh.test.advanced.MappedSubselect">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.advanced.MappedSubselect@28feb3fa]" name="beforeMethod" is-config="true" duration-ms="69" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.advanced.MappedSubselect@28feb3fa]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="loadSubselectEntity()[pri:0, instance:org.jpwh.test.advanced.MappedSubselect@28feb3fa]" name="loadSubselectEntity" duration-ms="11" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadSubselectEntity -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.advanced.MappedSubselect@28feb3fa]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.advanced.MappedSubselect -->
    </test> <!-- Advanced Mappings -->
    <test name="Collections/Associations" duration-ms="3542" started-at="2015-12-19T20:05:32Z" finished-at="2015-12-19T20:05:36Z">
      <class name="org.jpwh.test.associations.ManyToManyLinkEntity">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.ManyToManyLinkEntity@5e3a8624]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.ManyToManyLinkEntity@5e3a8624]" name="beforeMethod" is-config="true" duration-ms="87" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadCategoryItems()[pri:0, instance:org.jpwh.test.associations.ManyToManyLinkEntity@5e3a8624]" name="storeLoadCategoryItems" duration-ms="9" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCategoryItems -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.ManyToManyLinkEntity@5e3a8624]" name="afterMethod" is-config="true" duration-ms="24" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.ManyToManyLinkEntity -->
      <class name="org.jpwh.test.associations.OneToManyCascadePersist">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyCascadePersist@3bfdc050]" name="beforeMethod" is-config="true" duration-ms="65" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.OneToManyCascadePersist@3bfdc050]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeAndLoadItemBids()[pri:0, instance:org.jpwh.test.associations.OneToManyCascadePersist@3bfdc050]" name="storeAndLoadItemBids" duration-ms="8" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadItemBids -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyCascadePersist@3bfdc050]" name="afterMethod" is-config="true" duration-ms="21" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.OneToManyCascadePersist -->
      <class name="org.jpwh.test.collections.BagOfStrings">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.collections.BagOfStrings@57baeedf]" name="beforeMethod" is-config="true" duration-ms="59" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.collections.BagOfStrings@57baeedf]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeLoadCollection()[pri:0, instance:org.jpwh.test.collections.BagOfStrings@57baeedf]" name="storeLoadCollection" duration-ms="4" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCollection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.collections.BagOfStrings@57baeedf]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.collections.BagOfStrings -->
      <class name="org.jpwh.test.collections.EmbeddableSetOfStrings">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.collections.EmbeddableSetOfStrings@42d80b78]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.collections.EmbeddableSetOfStrings@42d80b78]" name="beforeMethod" is-config="true" duration-ms="76" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadCollection()[pri:0, instance:org.jpwh.test.collections.EmbeddableSetOfStrings@42d80b78]" name="storeLoadCollection" duration-ms="4" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCollection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.collections.EmbeddableSetOfStrings@42d80b78]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.collections.EmbeddableSetOfStrings -->
      <class name="org.jpwh.test.collections.SetOfEmbeddablesOrderBy">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.collections.SetOfEmbeddablesOrderBy@1bce4f0a]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.collections.SetOfEmbeddablesOrderBy@1bce4f0a]" name="beforeMethod" is-config="true" duration-ms="169" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadCollection()[pri:0, instance:org.jpwh.test.collections.SetOfEmbeddablesOrderBy@1bce4f0a]" name="storeLoadCollection" duration-ms="5" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCollection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.collections.SetOfEmbeddablesOrderBy@1bce4f0a]" name="afterMethod" is-config="true" duration-ms="33" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.collections.SetOfEmbeddablesOrderBy -->
      <class name="org.jpwh.test.collections.MapOfStrings">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.collections.MapOfStrings@464bee09]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.collections.MapOfStrings@464bee09]" name="beforeMethod" is-config="true" duration-ms="61" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadCollection()[pri:0, instance:org.jpwh.test.collections.MapOfStrings@464bee09]" name="storeLoadCollection" duration-ms="4" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCollection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.collections.MapOfStrings@464bee09]" name="afterMethod" is-config="true" duration-ms="18" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.collections.MapOfStrings -->
      <class name="org.jpwh.test.associations.OneToOneForeignKey">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.OneToOneForeignKey@685cb137]" name="beforeMethod" is-config="true" duration-ms="61" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.OneToOneForeignKey@685cb137]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeAndLoadUserAddress()[pri:0, instance:org.jpwh.test.associations.OneToOneForeignKey@685cb137]" name="storeAndLoadUserAddress" duration-ms="3" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadUserAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.OneToOneForeignKey@685cb137]" name="afterMethod" is-config="true" duration-ms="19" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.OneToOneForeignKey@685cb137]" name="beforeMethod" is-config="true" duration-ms="56" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeNonUniqueRelationship()[pri:0, instance:org.jpwh.test.associations.OneToOneForeignKey@685cb137]" name="storeNonUniqueRelationship" duration-ms="4" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <exception class="org.hibernate.exception.ConstraintViolationException">
            <message>
              <![CDATA[could not execute statement]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:112)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:109)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:95)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:207)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:45)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2823)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3323)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:89)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:447)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:333)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:335)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1224)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.flush(AbstractEntityManagerImpl.java:1300)
	at org.jpwh.test.associations.OneToOneForeignKey.storeNonUniqueRelationship(OneToOneForeignKey.java:80)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
Caused by: org.h2.jdbc.JdbcSQLException: Unique index or primary key violation: "UK_OB48MBNFMUFD417FO9SWUHFBV_INDEX_4 ON PUBLIC.USERS(SHIPPINGADDRESS_ID)"; SQL statement:
/* insert org.jpwh.model.associations.onetoone.foreignkey.User */ insert into USERS (shippingAddress_id, username, id) values (?, ?, ?) [23505-171]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.index.BaseIndex.getDuplicateKeyException(BaseIndex.java:82)
	at org.h2.index.TreeIndex.add(TreeIndex.java:62)
	at org.h2.table.RegularTable.addRow(RegularTable.java:122)
	at org.h2.command.dml.Insert.insertRows(Insert.java:124)
	at org.h2.command.dml.Insert.update(Insert.java:84)
	at org.h2.command.CommandContainer.update(CommandContainer.java:75)
	at org.h2.command.Command.executeUpdate(Command.java:230)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:156)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:142)
	at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at bitronix.tm.resource.jdbc.BaseProxyHandlerClass.invoke(BaseProxyHandlerClass.java:64)
	at com.sun.proxy.$Proxy18.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:204)
	... 44 more
]]>
            </full-stacktrace>
          </exception> <!-- org.hibernate.exception.ConstraintViolationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeNonUniqueRelationship -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.OneToOneForeignKey@685cb137]" name="afterMethod" is-config="true" duration-ms="19" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.OneToOneForeignKey -->
      <class name="org.jpwh.test.collections.MapOfStringsEmbeddables">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.collections.MapOfStringsEmbeddables@7cd62f43]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.collections.MapOfStringsEmbeddables@7cd62f43]" name="beforeMethod" is-config="true" duration-ms="57" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadCollection()[pri:0, instance:org.jpwh.test.collections.MapOfStringsEmbeddables@7cd62f43]" name="storeLoadCollection" duration-ms="14" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCollection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.collections.MapOfStringsEmbeddables@7cd62f43]" name="afterMethod" is-config="true" duration-ms="18" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.collections.MapOfStringsEmbeddables -->
      <class name="org.jpwh.test.associations.MapsMapKey">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.MapsMapKey@1a968a59]" name="beforeMethod" is-config="true" duration-ms="64" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.MapsMapKey@1a968a59]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeAndLoadItemBids()[pri:0, instance:org.jpwh.test.associations.MapsMapKey@1a968a59]" name="storeAndLoadItemBids" duration-ms="6" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadItemBids -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.MapsMapKey@1a968a59]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.MapsMapKey -->
      <class name="org.jpwh.test.associations.MapsTernary">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.MapsTernary@6a4f787b]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.MapsTernary@6a4f787b]" name="beforeMethod" is-config="true" duration-ms="70" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadCategoryItems()[pri:0, instance:org.jpwh.test.associations.MapsTernary@6a4f787b]" name="storeLoadCategoryItems" duration-ms="8" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCategoryItems -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.MapsTernary@6a4f787b]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.MapsTernary -->
      <class name="org.jpwh.test.associations.OneToManyCascadeRemove">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.OneToManyCascadeRemove@77cd7a0]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyCascadeRemove@77cd7a0]" name="beforeMethod" is-config="true" duration-ms="65" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeAndLoadItemBids()[pri:0, instance:org.jpwh.test.associations.OneToManyCascadeRemove@77cd7a0]" name="storeAndLoadItemBids" duration-ms="7" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadItemBids -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyCascadeRemove@77cd7a0]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.OneToManyCascadeRemove -->
      <class name="org.jpwh.test.collections.SetOfStrings">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.collections.SetOfStrings@754ba872]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.collections.SetOfStrings@754ba872]" name="beforeMethod" is-config="true" duration-ms="57" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadCollection()[pri:0, instance:org.jpwh.test.collections.SetOfStrings@754ba872]" name="storeLoadCollection" duration-ms="4" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCollection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.collections.SetOfStrings@754ba872]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.collections.SetOfStrings -->
      <class name="org.jpwh.test.associations.OneToManyBag">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyBag@604ed9f0]" name="beforeMethod" is-config="true" duration-ms="66" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.OneToManyBag@604ed9f0]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeAndLoadItemBids()[pri:0, instance:org.jpwh.test.associations.OneToManyBag@604ed9f0]" name="storeAndLoadItemBids" duration-ms="10" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadItemBids -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyBag@604ed9f0]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.OneToManyBag -->
      <class name="org.jpwh.test.collections.SortedMapOfStrings">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.collections.SortedMapOfStrings@343f4d3d]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.collections.SortedMapOfStrings@343f4d3d]" name="beforeMethod" is-config="true" duration-ms="61" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadCollection()[pri:0, instance:org.jpwh.test.collections.SortedMapOfStrings@343f4d3d]" name="storeLoadCollection" duration-ms="4" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCollection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.collections.SortedMapOfStrings@343f4d3d]" name="afterMethod" is-config="true" duration-ms="19" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.collections.SortedMapOfStrings -->
      <class name="org.jpwh.test.collections.SetOfStringsOrderBy">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.collections.SetOfStringsOrderBy@4667ae56]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.collections.SetOfStringsOrderBy@4667ae56]" name="beforeMethod" is-config="true" duration-ms="59" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadCollection()[pri:0, instance:org.jpwh.test.collections.SetOfStringsOrderBy@4667ae56]" name="storeLoadCollection" duration-ms="3" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCollection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.collections.SetOfStringsOrderBy@4667ae56]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.collections.SetOfStringsOrderBy -->
      <class name="org.jpwh.test.associations.OneToManyEmbeddableJoinTable">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.OneToManyEmbeddableJoinTable@6a41eaa2]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyEmbeddableJoinTable@6a41eaa2]" name="beforeMethod" is-config="true" duration-ms="68" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeAndLoadUsersShipments()[pri:0, instance:org.jpwh.test.associations.OneToManyEmbeddableJoinTable@6a41eaa2]" name="storeAndLoadUsersShipments" duration-ms="6" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadUsersShipments -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyEmbeddableJoinTable@6a41eaa2]" name="afterMethod" is-config="true" duration-ms="21" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.OneToManyEmbeddableJoinTable -->
      <class name="org.jpwh.test.associations.OneToOneJoinTable">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.OneToOneJoinTable@146ba0ac]" name="beforeMethod" is-config="true" duration-ms="81" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.OneToOneJoinTable@146ba0ac]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeAndLoadUserAddress()[pri:0, instance:org.jpwh.test.associations.OneToOneJoinTable@146ba0ac]" name="storeAndLoadUserAddress" duration-ms="5" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadUserAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.OneToOneJoinTable@146ba0ac]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.OneToOneJoinTable@146ba0ac]" name="beforeMethod" is-config="true" duration-ms="65" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeNonUniqueRelationship()[pri:0, instance:org.jpwh.test.associations.OneToOneJoinTable@146ba0ac]" name="storeNonUniqueRelationship" duration-ms="3" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <exception class="org.hibernate.exception.ConstraintViolationException">
            <message>
              <![CDATA[could not execute statement]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:112)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:109)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:95)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:207)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2829)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3323)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:89)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:447)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:333)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:335)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1224)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.flush(AbstractEntityManagerImpl.java:1300)
	at org.jpwh.test.associations.OneToOneJoinTable.storeNonUniqueRelationship(OneToOneJoinTable.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
Caused by: org.h2.jdbc.JdbcSQLException: Unique index or primary key violation: "UK_EW9CIRVGSIAOHXF5NNVFBOS2V_INDEX_3 ON PUBLIC.ITEM_SHIPMENT(ITEM_ID)"; SQL statement:
/* insert org.jpwh.model.associations.onetoone.jointable.Shipment */ insert into ITEM_SHIPMENT (ITEM_ID, SHIPMENT_ID) values (?, ?) [23505-171]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.index.BaseIndex.getDuplicateKeyException(BaseIndex.java:82)
	at org.h2.index.TreeIndex.add(TreeIndex.java:62)
	at org.h2.table.RegularTable.addRow(RegularTable.java:122)
	at org.h2.command.dml.Insert.insertRows(Insert.java:124)
	at org.h2.command.dml.Insert.update(Insert.java:84)
	at org.h2.command.CommandContainer.update(CommandContainer.java:75)
	at org.h2.command.Command.executeUpdate(Command.java:230)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:156)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:142)
	at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at bitronix.tm.resource.jdbc.BaseProxyHandlerClass.invoke(BaseProxyHandlerClass.java:64)
	at com.sun.proxy.$Proxy18.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:204)
	... 43 more
]]>
            </full-stacktrace>
          </exception> <!-- org.hibernate.exception.ConstraintViolationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeNonUniqueRelationship -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.OneToOneJoinTable@146ba0ac]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.OneToOneJoinTable -->
      <class name="org.jpwh.test.associations.OneToManyOnDeleteCascade">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.OneToManyOnDeleteCascade@42e26948]" name="beforeClass" is-config="true" duration-ms="1" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyOnDeleteCascade@42e26948]" name="beforeMethod" is-config="true" duration-ms="62" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeAndLoadItemBids()[pri:0, instance:org.jpwh.test.associations.OneToManyOnDeleteCascade@42e26948]" name="storeAndLoadItemBids" duration-ms="8" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadItemBids -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyOnDeleteCascade@42e26948]" name="afterMethod" is-config="true" duration-ms="19" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.OneToManyOnDeleteCascade -->
      <class name="org.jpwh.test.collections.SortedSetOfStrings">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.collections.SortedSetOfStrings@5622fdf]" name="beforeClass" is-config="true" duration-ms="1" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.collections.SortedSetOfStrings@5622fdf]" name="beforeMethod" is-config="true" duration-ms="58" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadCollection()[pri:0, instance:org.jpwh.test.collections.SortedSetOfStrings@5622fdf]" name="storeLoadCollection" duration-ms="3" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCollection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.collections.SortedSetOfStrings@5622fdf]" name="afterMethod" is-config="true" duration-ms="19" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.collections.SortedSetOfStrings -->
      <class name="org.jpwh.test.associations.OneToOneForeignGenerator">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.OneToOneForeignGenerator@53b32d7]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.OneToOneForeignGenerator@53b32d7]" name="beforeMethod" is-config="true" duration-ms="69" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeAndLoadUserAddress()[pri:0, instance:org.jpwh.test.associations.OneToOneForeignGenerator@53b32d7]" name="storeAndLoadUserAddress" duration-ms="3" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadUserAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.OneToOneForeignGenerator@53b32d7]" name="afterMethod" is-config="true" duration-ms="19" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.OneToOneForeignGenerator -->
      <class name="org.jpwh.test.associations.ManyToManyTernary">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.ManyToManyTernary@91161c7]" name="beforeClass" is-config="true" duration-ms="1" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.ManyToManyTernary@91161c7]" name="beforeMethod" is-config="true" duration-ms="93" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadCategoryItems()[pri:0, instance:org.jpwh.test.associations.ManyToManyTernary@91161c7]" name="storeLoadCategoryItems" duration-ms="13" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCategoryItems -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.ManyToManyTernary@91161c7]" name="afterMethod" is-config="true" duration-ms="112" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.ManyToManyTernary -->
      <class name="org.jpwh.test.associations.OneToManyList">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.OneToManyList@5c3bd550]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyList@5c3bd550]" name="beforeMethod" is-config="true" duration-ms="67" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeAndLoadItemBids()[pri:0, instance:org.jpwh.test.associations.OneToManyList@5c3bd550]" name="storeAndLoadItemBids" duration-ms="5" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadItemBids -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyList@5c3bd550]" name="afterMethod" is-config="true" duration-ms="19" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.OneToManyList -->
      <class name="org.jpwh.test.associations.OneToManyOrphanRemoval">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.OneToManyOrphanRemoval@7d9d1a19]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyOrphanRemoval@7d9d1a19]" name="beforeMethod" is-config="true" duration-ms="76" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeAndLoadItemBids()[pri:0, instance:org.jpwh.test.associations.OneToManyOrphanRemoval@7d9d1a19]" name="storeAndLoadItemBids" duration-ms="8" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadItemBids -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyOrphanRemoval@7d9d1a19]" name="afterMethod" is-config="true" duration-ms="23" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.OneToManyOrphanRemoval -->
      <class name="org.jpwh.test.collections.BagOfStringsOrderBy">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.collections.BagOfStringsOrderBy@5442a311]" name="beforeMethod" is-config="true" duration-ms="80" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.collections.BagOfStringsOrderBy@5442a311]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeLoadCollection()[pri:0, instance:org.jpwh.test.collections.BagOfStringsOrderBy@5442a311]" name="storeLoadCollection" duration-ms="6" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCollection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.collections.BagOfStringsOrderBy@5442a311]" name="afterMethod" is-config="true" duration-ms="26" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.collections.BagOfStringsOrderBy -->
      <class name="org.jpwh.test.associations.OneToManyJoinTable">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyJoinTable@4dfa3a9d]" name="beforeMethod" is-config="true" duration-ms="66" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.OneToManyJoinTable@4dfa3a9d]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeAndLoadItemUsers()[pri:0, instance:org.jpwh.test.associations.OneToManyJoinTable@4dfa3a9d]" name="storeAndLoadItemUsers" duration-ms="6" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadItemUsers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyJoinTable@4dfa3a9d]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:35Z" finished-at="2015-12-19T12:05:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.OneToManyJoinTable -->
      <class name="org.jpwh.test.associations.OneToManyEmbeddable">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyEmbeddable@1794d431]" name="beforeMethod" is-config="true" duration-ms="68" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.OneToManyEmbeddable@1794d431]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeAndLoadUsersShipments()[pri:0, instance:org.jpwh.test.associations.OneToManyEmbeddable@1794d431]" name="storeAndLoadUsersShipments" duration-ms="4" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadUsersShipments -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyEmbeddable@1794d431]" name="afterMethod" is-config="true" duration-ms="21" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.OneToManyEmbeddable -->
      <class name="org.jpwh.test.collections.MapOfStringsOrderBy">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.collections.MapOfStringsOrderBy@39c0f4a]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.collections.MapOfStringsOrderBy@39c0f4a]" name="beforeMethod" is-config="true" duration-ms="58" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadCollection()[pri:0, instance:org.jpwh.test.collections.MapOfStringsOrderBy@39c0f4a]" name="storeLoadCollection" duration-ms="4" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCollection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.collections.MapOfStringsOrderBy@39c0f4a]" name="afterMethod" is-config="true" duration-ms="19" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.collections.MapOfStringsOrderBy -->
      <class name="org.jpwh.test.associations.ManyToManyBidirectional">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.ManyToManyBidirectional@e25b2fe]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.ManyToManyBidirectional@e25b2fe]" name="beforeMethod" is-config="true" duration-ms="76" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadCategoryItems()[pri:0, instance:org.jpwh.test.associations.ManyToManyBidirectional@e25b2fe]" name="storeLoadCategoryItems" duration-ms="9" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCategoryItems -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.ManyToManyBidirectional@e25b2fe]" name="afterMethod" is-config="true" duration-ms="21" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.ManyToManyBidirectional -->
      <class name="org.jpwh.test.collections.BagOfEmbeddables">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.collections.BagOfEmbeddables@4883b407]" name="beforeMethod" is-config="true" duration-ms="73" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.collections.BagOfEmbeddables@4883b407]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeLoadCollection()[pri:0, instance:org.jpwh.test.collections.BagOfEmbeddables@4883b407]" name="storeLoadCollection" duration-ms="7" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCollection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.collections.BagOfEmbeddables@4883b407]" name="afterMethod" is-config="true" duration-ms="21" started-at="2015-12-19T12:05:32Z" finished-at="2015-12-19T12:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.collections.BagOfEmbeddables -->
      <class name="org.jpwh.test.collections.MapOfEmbeddables">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.collections.MapOfEmbeddables@204f30ec]" name="beforeMethod" is-config="true" duration-ms="59" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.collections.MapOfEmbeddables@204f30ec]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeLoadCollection()[pri:0, instance:org.jpwh.test.collections.MapOfEmbeddables@204f30ec]" name="storeLoadCollection" duration-ms="7" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCollection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.collections.MapOfEmbeddables@204f30ec]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.collections.MapOfEmbeddables -->
      <class name="org.jpwh.test.collections.SetOfEmbeddables">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.collections.SetOfEmbeddables@548e7350]" name="beforeMethod" is-config="true" duration-ms="56" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.collections.SetOfEmbeddables@548e7350]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeLoadCollection()[pri:0, instance:org.jpwh.test.collections.SetOfEmbeddables@548e7350]" name="storeLoadCollection" duration-ms="3" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCollection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.collections.SetOfEmbeddables@548e7350]" name="afterMethod" is-config="true" duration-ms="18" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.collections.SetOfEmbeddables -->
      <class name="org.jpwh.test.associations.OneToOneSharedPrimaryKey">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.OneToOneSharedPrimaryKey@6d4b1c02]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.OneToOneSharedPrimaryKey@6d4b1c02]" name="beforeMethod" is-config="true" duration-ms="58" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeAndLoadUserAddress()[pri:0, instance:org.jpwh.test.associations.OneToOneSharedPrimaryKey@6d4b1c02]" name="storeAndLoadUserAddress" duration-ms="3" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadUserAddress -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.OneToOneSharedPrimaryKey@6d4b1c02]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.OneToOneSharedPrimaryKey -->
      <class name="org.jpwh.test.associations.OneToManyBidirectional">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.associations.OneToManyBidirectional@6eebc39e]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyBidirectional@6eebc39e]" name="beforeMethod" is-config="true" duration-ms="60" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeAndLoadItemBids()[pri:0, instance:org.jpwh.test.associations.OneToManyBidirectional@6eebc39e]" name="storeAndLoadItemBids" duration-ms="7" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadItemBids -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.associations.OneToManyBidirectional@6eebc39e]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:34Z" finished-at="2015-12-19T12:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.associations.OneToManyBidirectional -->
      <class name="org.jpwh.test.collections.ListOfStrings">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.collections.ListOfStrings@6093dd95]" name="beforeClass" is-config="true" duration-ms="1" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.collections.ListOfStrings@6093dd95]" name="beforeMethod" is-config="true" duration-ms="58" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadCollection()[pri:0, instance:org.jpwh.test.collections.ListOfStrings@6093dd95]" name="storeLoadCollection" duration-ms="6" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCollection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.collections.ListOfStrings@6093dd95]" name="afterMethod" is-config="true" duration-ms="19" started-at="2015-12-19T12:05:33Z" finished-at="2015-12-19T12:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.collections.ListOfStrings -->
    </test> <!-- Collections/Associations -->
    <test name="Complex Schemas" duration-ms="1456" started-at="2015-12-19T20:05:36Z" finished-at="2015-12-19T20:05:37Z">
      <class name="org.jpwh.test.complexschemas.CompositeKeyMapsId">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.complexschemas.CompositeKeyMapsId@73ad2d6]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.complexschemas.CompositeKeyMapsId@73ad2d6]" name="beforeMethod" is-config="true" duration-ms="207" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoad()[pri:0, instance:org.jpwh.test.complexschemas.CompositeKeyMapsId@73ad2d6]" name="storeLoad" duration-ms="5" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoad -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.complexschemas.CompositeKeyMapsId@73ad2d6]" name="afterMethod" is-config="true" duration-ms="23" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.complexschemas.CompositeKeyMapsId -->
      <class name="org.jpwh.test.complexschemas.NaturalForeignKey">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.complexschemas.NaturalForeignKey@3fee9989]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.complexschemas.NaturalForeignKey@3fee9989]" name="beforeMethod" is-config="true" duration-ms="69" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoad()[pri:0, instance:org.jpwh.test.complexschemas.NaturalForeignKey@3fee9989]" name="storeLoad" duration-ms="6" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoad -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.complexschemas.NaturalForeignKey@3fee9989]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.complexschemas.NaturalForeignKey -->
      <class name="org.jpwh.test.complexschemas.NaturalPrimaryKey">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.complexschemas.NaturalPrimaryKey@6500df86]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.complexschemas.NaturalPrimaryKey@6500df86]" name="beforeMethod" is-config="true" duration-ms="61" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoad()[pri:0, instance:org.jpwh.test.complexschemas.NaturalPrimaryKey@6500df86]" name="storeLoad" duration-ms="2" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoad -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.complexschemas.NaturalPrimaryKey@6500df86]" name="afterMethod" is-config="true" duration-ms="19" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.complexschemas.NaturalPrimaryKey -->
      <class name="org.jpwh.test.complexschemas.SecondaryTable">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.complexschemas.SecondaryTable@402a079c]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.complexschemas.SecondaryTable@402a079c]" name="beforeMethod" is-config="true" duration-ms="61" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeAndLoadUsers()[pri:0, instance:org.jpwh.test.complexschemas.SecondaryTable@402a079c]" name="storeAndLoadUsers" duration-ms="3" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeAndLoadUsers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.complexschemas.SecondaryTable@402a079c]" name="afterMethod" is-config="true" duration-ms="21" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.complexschemas.SecondaryTable -->
      <class name="org.jpwh.test.complexschemas.CompositeKeyEmbeddedId">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.complexschemas.CompositeKeyEmbeddedId@4cf777e8]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.complexschemas.CompositeKeyEmbeddedId@4cf777e8]" name="beforeMethod" is-config="true" duration-ms="66" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoad()[pri:0, instance:org.jpwh.test.complexschemas.CompositeKeyEmbeddedId@4cf777e8]" name="storeLoad" duration-ms="3" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoad -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.complexschemas.CompositeKeyEmbeddedId@4cf777e8]" name="afterMethod" is-config="true" duration-ms="19" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.complexschemas.CompositeKeyEmbeddedId -->
      <class name="org.jpwh.test.complexschemas.CompositeKeyManyToOne">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.complexschemas.CompositeKeyManyToOne@2f686d1f]" name="beforeMethod" is-config="true" duration-ms="69" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.complexschemas.CompositeKeyManyToOne@2f686d1f]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="storeLoad()[pri:0, instance:org.jpwh.test.complexschemas.CompositeKeyManyToOne@2f686d1f]" name="storeLoad" duration-ms="7" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoad -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.complexschemas.CompositeKeyManyToOne@2f686d1f]" name="afterMethod" is-config="true" duration-ms="33" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.complexschemas.CompositeKeyManyToOne -->
      <class name="org.jpwh.test.complexschemas.CustomSchema">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="beforeMethod" is-config="true" duration-ms="81" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="afterMethod" is-config="true" duration-ms="25" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="configurePersistenceUnit()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="configurePersistenceUnit" duration-ms="0" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configurePersistenceUnit -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="beforeMethod" is-config="true" duration-ms="65" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadCheckColumnInvalid()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="storeLoadCheckColumnInvalid" duration-ms="2" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <exception class="org.hibernate.exception.ConstraintViolationException">
            <message>
              <![CDATA[could not execute statement]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:112)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:109)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:95)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:207)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:45)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2823)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3323)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:89)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:447)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:333)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:335)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1224)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.flush(AbstractEntityManagerImpl.java:1300)
	at org.jpwh.test.complexschemas.CustomSchema.storeLoadCheckColumnInvalid(CustomSchema.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
Caused by: org.h2.jdbc.JdbcSQLException: Check constraint violation: "(SUBSTRING(LOWER(USERNAME), 0, 5) <> 'admin')"; SQL statement:
/* insert org.jpwh.model.complexschemas.custom.User */ insert into USERS (email, username, id) values (?, ?, ?) [23513-171]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:305)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:692)
	at org.h2.command.dml.Insert.insertRows(Insert.java:120)
	at org.h2.command.dml.Insert.update(Insert.java:84)
	at org.h2.command.CommandContainer.update(CommandContainer.java:75)
	at org.h2.command.Command.executeUpdate(Command.java:230)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:156)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:142)
	at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at bitronix.tm.resource.jdbc.BaseProxyHandlerClass.invoke(BaseProxyHandlerClass.java:64)
	at com.sun.proxy.$Proxy18.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:204)
	... 44 more
]]>
            </full-stacktrace>
          </exception> <!-- org.hibernate.exception.ConstraintViolationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCheckColumnInvalid -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="afterMethod" is-config="true" duration-ms="24" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="beforeMethod" is-config="true" duration-ms="66" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadCheckSingleRowInvalid()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="storeLoadCheckSingleRowInvalid" duration-ms="4" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <exception class="org.hibernate.exception.ConstraintViolationException">
            <message>
              <![CDATA[could not execute statement]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:112)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:109)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:95)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:207)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:45)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2823)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3323)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:89)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:447)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:333)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:335)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1224)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.flush(AbstractEntityManagerImpl.java:1300)
	at org.jpwh.test.complexschemas.CustomSchema.storeLoadCheckSingleRowInvalid(CustomSchema.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
Caused by: org.h2.jdbc.JdbcSQLException: Check constraint violation: "CONSTRAINT_22: (AUCTIONSTART < AUCTIONEND)"; SQL statement:
/* insert org.jpwh.model.complexschemas.custom.Item */ insert into Item (auctionEnd, auctionStart, name, id) values (?, ?, ?, ?) [23513-171]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.constraint.ConstraintCheck.checkRow(ConstraintCheck.java:92)
	at org.h2.table.Table.fireConstraints(Table.java:873)
	at org.h2.table.Table.fireBeforeRow(Table.java:863)
	at org.h2.command.dml.Insert.insertRows(Insert.java:121)
	at org.h2.command.dml.Insert.update(Insert.java:84)
	at org.h2.command.CommandContainer.update(CommandContainer.java:75)
	at org.h2.command.Command.executeUpdate(Command.java:230)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:156)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:142)
	at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at bitronix.tm.resource.jdbc.BaseProxyHandlerClass.invoke(BaseProxyHandlerClass.java:64)
	at com.sun.proxy.$Proxy18.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:204)
	... 44 more
]]>
            </full-stacktrace>
          </exception> <!-- org.hibernate.exception.ConstraintViolationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCheckSingleRowInvalid -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="afterMethod" is-config="true" duration-ms="23" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="beforeMethod" is-config="true" duration-ms="65" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadCheckSubselectValid()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="storeLoadCheckSubselectValid" duration-ms="3" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <exception class="org.hibernate.exception.ConstraintViolationException">
            <message>
              <![CDATA[could not execute statement]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:112)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:109)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:95)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:207)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:45)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2823)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3323)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:89)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:447)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:333)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:335)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1224)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.flush(AbstractEntityManagerImpl.java:1300)
	at org.jpwh.test.complexschemas.CustomSchema.storeLoadCheckSubselectValid(CustomSchema.java:138)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
Caused by: org.h2.jdbc.JdbcSQLException: Check constraint violation: "AUCTION_BID_TIME: (CREATEDON <= (SELECT
    I.AUCTIONEND
FROM PUBLIC.ITEM I
    /* PUBLIC.PRIMARY_KEY_2: ID = ITEM_ID */
    /* scanCount: 2 */
WHERE I.ID = ITEM_ID))"; SQL statement:
/* insert org.jpwh.model.complexschemas.custom.Bid */ insert into Bid (amount, createdOn, ITEM_ID, id) values (?, ?, ?, ?) [23513-171]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.constraint.ConstraintCheck.checkRow(ConstraintCheck.java:92)
	at org.h2.table.Table.fireConstraints(Table.java:873)
	at org.h2.table.Table.fireBeforeRow(Table.java:863)
	at org.h2.command.dml.Insert.insertRows(Insert.java:121)
	at org.h2.command.dml.Insert.update(Insert.java:84)
	at org.h2.command.CommandContainer.update(CommandContainer.java:75)
	at org.h2.command.Command.executeUpdate(Command.java:230)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:156)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:142)
	at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at bitronix.tm.resource.jdbc.BaseProxyHandlerClass.invoke(BaseProxyHandlerClass.java:64)
	at com.sun.proxy.$Proxy18.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:204)
	... 44 more
]]>
            </full-stacktrace>
          </exception> <!-- org.hibernate.exception.ConstraintViolationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadCheckSubselectValid -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="afterMethod" is-config="true" duration-ms="21" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="beforeMethod" is-config="true" duration-ms="71" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadDomainInvalid()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="storeLoadDomainInvalid" duration-ms="1" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <exception class="org.hibernate.exception.ConstraintViolationException">
            <message>
              <![CDATA[could not execute statement]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:112)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:109)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:95)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:207)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:45)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2823)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3323)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:89)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:447)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:333)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:335)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1224)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.flush(AbstractEntityManagerImpl.java:1300)
	at org.jpwh.test.complexschemas.CustomSchema.storeLoadDomainInvalid(CustomSchema.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
Caused by: org.h2.jdbc.JdbcSQLException: Check constraint violation: "(POSITION('@', EMAIL) > 1)"; SQL statement:
/* insert org.jpwh.model.complexschemas.custom.User */ insert into USERS (email, username, id) values (?, ?, ?) [23513-171]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:305)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:692)
	at org.h2.command.dml.Insert.insertRows(Insert.java:120)
	at org.h2.command.dml.Insert.update(Insert.java:84)
	at org.h2.command.CommandContainer.update(CommandContainer.java:75)
	at org.h2.command.Command.executeUpdate(Command.java:230)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:156)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:142)
	at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at bitronix.tm.resource.jdbc.BaseProxyHandlerClass.invoke(BaseProxyHandlerClass.java:64)
	at com.sun.proxy.$Proxy18.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:204)
	... 44 more
]]>
            </full-stacktrace>
          </exception> <!-- org.hibernate.exception.ConstraintViolationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadDomainInvalid -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="beforeMethod" is-config="true" duration-ms="68" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadUniqueMultiColumnValid()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="storeLoadUniqueMultiColumnValid" duration-ms="2" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <exception class="org.hibernate.exception.ConstraintViolationException">
            <message>
              <![CDATA[could not execute statement]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:112)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:109)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:95)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:207)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:45)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2823)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3323)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:89)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:447)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:333)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:335)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1224)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.flush(AbstractEntityManagerImpl.java:1300)
	at org.jpwh.test.complexschemas.CustomSchema.storeLoadUniqueMultiColumnValid(CustomSchema.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
Caused by: org.h2.jdbc.JdbcSQLException: Unique index or primary key violation: "CONSTRAINT_INDEX_4 ON PUBLIC.USERS(USERNAME)"; SQL statement:
/* insert org.jpwh.model.complexschemas.custom.User */ insert into USERS (email, username, id) values (?, ?, ?) [23505-171]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.index.BaseIndex.getDuplicateKeyException(BaseIndex.java:82)
	at org.h2.index.TreeIndex.add(TreeIndex.java:62)
	at org.h2.table.RegularTable.addRow(RegularTable.java:122)
	at org.h2.command.dml.Insert.insertRows(Insert.java:124)
	at org.h2.command.dml.Insert.update(Insert.java:84)
	at org.h2.command.CommandContainer.update(CommandContainer.java:75)
	at org.h2.command.Command.executeUpdate(Command.java:230)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:156)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:142)
	at sun.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at bitronix.tm.resource.jdbc.BaseProxyHandlerClass.invoke(BaseProxyHandlerClass.java:64)
	at com.sun.proxy.$Proxy18.executeUpdate(Unknown Source)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:204)
	... 44 more
]]>
            </full-stacktrace>
          </exception> <!-- org.hibernate.exception.ConstraintViolationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadUniqueMultiColumnValid -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="afterMethod" is-config="true" duration-ms="27" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="beforeMethod" is-config="true" duration-ms="68" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoadValid()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="storeLoadValid" duration-ms="3" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoadValid -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.complexschemas.CustomSchema@7085bdee]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.complexschemas.CustomSchema -->
      <class name="org.jpwh.test.complexschemas.CompositeKeyReadOnly">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.complexschemas.CompositeKeyReadOnly@59ec2012]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.complexschemas.CompositeKeyReadOnly@59ec2012]" name="beforeMethod" is-config="true" duration-ms="70" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="storeLoad()[pri:0, instance:org.jpwh.test.complexschemas.CompositeKeyReadOnly@59ec2012]" name="storeLoad" duration-ms="3" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storeLoad -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.complexschemas.CompositeKeyReadOnly@59ec2012]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:36Z" finished-at="2015-12-19T12:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.complexschemas.CompositeKeyReadOnly -->
    </test> <!-- Complex Schemas -->
    <test name="Concurrency Control" duration-ms="3691" started-at="2015-12-19T20:05:37Z" finished-at="2015-12-19T20:05:41Z">
      <class name="org.jpwh.test.concurrency.VersioningAll">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.concurrency.VersioningAll@31dc339b]" name="beforeMethod" is-config="true" duration-ms="55" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.concurrency.VersioningAll@31dc339b]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="firstCommitWins()[pri:0, instance:org.jpwh.test.concurrency.VersioningAll@31dc339b]" name="firstCommitWins" duration-ms="5" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <exception class="javax.persistence.OptimisticLockException">
            <message>
              <![CDATA[Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.persistence.OptimisticLockException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.wrapStaleStateException(AbstractEntityManagerImpl.java:1729)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1634)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1608)
	at org.hibernate.jpa.internal.EntityManagerImpl$CallbackExceptionMapperImpl.mapManagedFlushFailure(EntityManagerImpl.java:235)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2898)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2270)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:485)
	at org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.beforeCompletion(JtaTransactionCoordinatorImpl.java:316)
	at org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorNonTrackingImpl.beforeCompletion(SynchronizationCallbackCoordinatorNonTrackingImpl.java:47)
	at org.hibernate.resource.transaction.backend.jta.internal.synchronization.RegisteredSynchronization.beforeCompletion(RegisteredSynchronization.java:37)
	at bitronix.tm.BitronixTransaction.fireBeforeCompletionEvent(BitronixTransaction.java:532)
	at bitronix.tm.BitronixTransaction.commit(BitronixTransaction.java:235)
	at bitronix.tm.BitronixTransactionManager.commit(BitronixTransactionManager.java:143)
	at org.jpwh.test.concurrency.VersioningAll.firstCommitWins(VersioningAll.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
Caused by: org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1
	at org.hibernate.jdbc.Expectations$BasicExpectation.checkBatched(Expectations.java:67)
	at org.hibernate.jdbc.Expectations$BasicExpectation.verifyOutcome(Expectations.java:54)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3008)
	at org.hibernate.persister.entity.AbstractEntityPersister.updateOrInsert(AbstractEntityPersister.java:2887)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3267)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:145)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:447)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:333)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:335)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1224)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:464)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2894)
	... 42 more
]]>
            </full-stacktrace>
          </exception> <!-- javax.persistence.OptimisticLockException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstCommitWins -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.concurrency.VersioningAll@31dc339b]" name="afterMethod" is-config="true" duration-ms="17" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.concurrency.VersioningAll -->
      <class name="org.jpwh.test.concurrency.Locking">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="beforeMethod" is-config="true" duration-ms="69" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="extendedLock()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="extendedLock" duration-ms="15" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extendedLock -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="beforeMethod" is-config="true" duration-ms="70" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="findLock()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="findLock" duration-ms="9" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findLock -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:37Z" finished-at="2015-12-19T12:05:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="beforeMethod" is-config="true" duration-ms="64" started-at="2015-12-19T12:05:38Z" finished-at="2015-12-19T12:05:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="pessimisticReadWrite()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="pessimisticReadWrite" duration-ms="2025" started-at="2015-12-19T12:05:38Z" finished-at="2015-12-19T12:05:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pessimisticReadWrite -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:40Z" finished-at="2015-12-19T12:05:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="beforeMethod" is-config="true" duration-ms="59" started-at="2015-12-19T12:05:40Z" finished-at="2015-12-19T12:05:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="firstCommitWins()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="firstCommitWins" duration-ms="5" started-at="2015-12-19T12:05:40Z" finished-at="2015-12-19T12:05:40Z">
          <exception class="javax.persistence.OptimisticLockException">
            <message>
              <![CDATA[Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.persistence.OptimisticLockException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.wrapStaleStateException(AbstractEntityManagerImpl.java:1729)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1634)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1608)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.flush(AbstractEntityManagerImpl.java:1303)
	at org.jpwh.test.concurrency.Versioning.firstCommitWins(Versioning.java:95)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
Caused by: org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1
	at org.hibernate.jdbc.Expectations$BasicExpectation.checkBatched(Expectations.java:67)
	at org.hibernate.jdbc.Expectations$BasicExpectation.verifyOutcome(Expectations.java:54)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3008)
	at org.hibernate.persister.entity.AbstractEntityPersister.updateOrInsert(AbstractEntityPersister.java:2887)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3267)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:145)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:447)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:333)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:335)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1224)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.flush(AbstractEntityManagerImpl.java:1300)
	... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- javax.persistence.OptimisticLockException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstCommitWins -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:40Z" finished-at="2015-12-19T12:05:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="beforeMethod" is-config="true" duration-ms="592" started-at="2015-12-19T12:05:40Z" finished-at="2015-12-19T12:05:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="forceIncrement()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="forceIncrement" duration-ms="15" started-at="2015-12-19T12:05:40Z" finished-at="2015-12-19T12:05:40Z">
          <exception class="org.hibernate.StaleObjectStateException">
            <message>
              <![CDATA[Row was updated or deleted by another transaction (or unsaved-value mapping was incorrect) : [org.jpwh.model.concurrency.version.Item#1000]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.hibernate.StaleObjectStateException: Row was updated or deleted by another transaction (or unsaved-value mapping was incorrect) : [org.jpwh.model.concurrency.version.Item#1000]
	at org.hibernate.persister.entity.AbstractEntityPersister.forceVersionIncrement(AbstractEntityPersister.java:1555)
	at org.hibernate.action.internal.EntityIncrementVersionProcess.doBeforeTransactionCompletion(EntityIncrementVersionProcess.java:43)
	at org.hibernate.engine.spi.ActionQueue$BeforeTransactionCompletionProcessQueue.beforeTransactionCompletion(ActionQueue.java:706)
	at org.hibernate.engine.spi.ActionQueue.beforeTransactionCompletion(ActionQueue.java:373)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2271)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:485)
	at org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.beforeCompletion(JtaTransactionCoordinatorImpl.java:316)
	at org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorNonTrackingImpl.beforeCompletion(SynchronizationCallbackCoordinatorNonTrackingImpl.java:47)
	at org.hibernate.resource.transaction.backend.jta.internal.synchronization.RegisteredSynchronization.beforeCompletion(RegisteredSynchronization.java:37)
	at bitronix.tm.BitronixTransaction.fireBeforeCompletionEvent(BitronixTransaction.java:532)
	at bitronix.tm.BitronixTransaction.commit(BitronixTransaction.java:235)
	at bitronix.tm.BitronixTransactionManager.commit(BitronixTransactionManager.java:143)
	at org.jpwh.test.concurrency.Versioning.forceIncrement(Versioning.java:279)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
]]>
            </full-stacktrace>
          </exception> <!-- org.hibernate.StaleObjectStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forceIncrement -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="afterMethod" is-config="true" duration-ms="32" started-at="2015-12-19T12:05:40Z" finished-at="2015-12-19T12:05:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="beforeMethod" is-config="true" duration-ms="85" started-at="2015-12-19T12:05:40Z" finished-at="2015-12-19T12:05:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="manualVersionChecking()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="manualVersionChecking" duration-ms="20" started-at="2015-12-19T12:05:40Z" finished-at="2015-12-19T12:05:40Z">
          <exception class="org.hibernate.OptimisticLockException">
            <message>
              <![CDATA[Newer version [1] of entity [[org.jpwh.model.concurrency.version.Item#1001]] found in database]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.hibernate.OptimisticLockException: Newer version [1] of entity [[org.jpwh.model.concurrency.version.Item#1001]] found in database
	at org.hibernate.action.internal.EntityVerifyVersionProcess.doBeforeTransactionCompletion(EntityVerifyVersionProcess.java:51)
	at org.hibernate.engine.spi.ActionQueue$BeforeTransactionCompletionProcessQueue.beforeTransactionCompletion(ActionQueue.java:706)
	at org.hibernate.engine.spi.ActionQueue.beforeTransactionCompletion(ActionQueue.java:373)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2271)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:485)
	at org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.beforeCompletion(JtaTransactionCoordinatorImpl.java:316)
	at org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorNonTrackingImpl.beforeCompletion(SynchronizationCallbackCoordinatorNonTrackingImpl.java:47)
	at org.hibernate.resource.transaction.backend.jta.internal.synchronization.RegisteredSynchronization.beforeCompletion(RegisteredSynchronization.java:37)
	at bitronix.tm.BitronixTransaction.fireBeforeCompletionEvent(BitronixTransaction.java:532)
	at bitronix.tm.BitronixTransaction.commit(BitronixTransaction.java:235)
	at bitronix.tm.BitronixTransactionManager.commit(BitronixTransactionManager.java:143)
	at org.jpwh.test.concurrency.Versioning.manualVersionChecking(Versioning.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
]]>
            </full-stacktrace>
          </exception> <!-- org.hibernate.OptimisticLockException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- manualVersionChecking -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.concurrency.Locking@3c0f93f1]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:40Z" finished-at="2015-12-19T12:05:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.concurrency.Locking -->
      <class name="org.jpwh.test.concurrency.Versioning">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.concurrency.Versioning@31610302]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:40Z" finished-at="2015-12-19T12:05:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.concurrency.Versioning@31610302]" name="beforeMethod" is-config="true" duration-ms="58" started-at="2015-12-19T12:05:40Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="firstCommitWins()[pri:0, instance:org.jpwh.test.concurrency.Versioning@31610302]" name="firstCommitWins" duration-ms="5" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <exception class="javax.persistence.OptimisticLockException">
            <message>
              <![CDATA[Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.persistence.OptimisticLockException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.wrapStaleStateException(AbstractEntityManagerImpl.java:1729)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1634)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1608)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.flush(AbstractEntityManagerImpl.java:1303)
	at org.jpwh.test.concurrency.Versioning.firstCommitWins(Versioning.java:95)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
Caused by: org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1
	at org.hibernate.jdbc.Expectations$BasicExpectation.checkBatched(Expectations.java:67)
	at org.hibernate.jdbc.Expectations$BasicExpectation.verifyOutcome(Expectations.java:54)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3008)
	at org.hibernate.persister.entity.AbstractEntityPersister.updateOrInsert(AbstractEntityPersister.java:2887)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3267)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:145)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:447)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:333)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:335)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1224)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.flush(AbstractEntityManagerImpl.java:1300)
	... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- javax.persistence.OptimisticLockException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstCommitWins -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.concurrency.Versioning@31610302]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.concurrency.Versioning@31610302]" name="beforeMethod" is-config="true" duration-ms="58" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="forceIncrement()[pri:0, instance:org.jpwh.test.concurrency.Versioning@31610302]" name="forceIncrement" duration-ms="11" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <exception class="org.hibernate.StaleObjectStateException">
            <message>
              <![CDATA[Row was updated or deleted by another transaction (or unsaved-value mapping was incorrect) : [org.jpwh.model.concurrency.version.Item#1000]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.hibernate.StaleObjectStateException: Row was updated or deleted by another transaction (or unsaved-value mapping was incorrect) : [org.jpwh.model.concurrency.version.Item#1000]
	at org.hibernate.persister.entity.AbstractEntityPersister.forceVersionIncrement(AbstractEntityPersister.java:1555)
	at org.hibernate.action.internal.EntityIncrementVersionProcess.doBeforeTransactionCompletion(EntityIncrementVersionProcess.java:43)
	at org.hibernate.engine.spi.ActionQueue$BeforeTransactionCompletionProcessQueue.beforeTransactionCompletion(ActionQueue.java:706)
	at org.hibernate.engine.spi.ActionQueue.beforeTransactionCompletion(ActionQueue.java:373)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2271)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:485)
	at org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.beforeCompletion(JtaTransactionCoordinatorImpl.java:316)
	at org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorNonTrackingImpl.beforeCompletion(SynchronizationCallbackCoordinatorNonTrackingImpl.java:47)
	at org.hibernate.resource.transaction.backend.jta.internal.synchronization.RegisteredSynchronization.beforeCompletion(RegisteredSynchronization.java:37)
	at bitronix.tm.BitronixTransaction.fireBeforeCompletionEvent(BitronixTransaction.java:532)
	at bitronix.tm.BitronixTransaction.commit(BitronixTransaction.java:235)
	at bitronix.tm.BitronixTransactionManager.commit(BitronixTransactionManager.java:143)
	at org.jpwh.test.concurrency.Versioning.forceIncrement(Versioning.java:279)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
]]>
            </full-stacktrace>
          </exception> <!-- org.hibernate.StaleObjectStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forceIncrement -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.concurrency.Versioning@31610302]" name="afterMethod" is-config="true" duration-ms="18" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.concurrency.Versioning@31610302]" name="beforeMethod" is-config="true" duration-ms="63" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="manualVersionChecking()[pri:0, instance:org.jpwh.test.concurrency.Versioning@31610302]" name="manualVersionChecking" duration-ms="14" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <exception class="org.hibernate.OptimisticLockException">
            <message>
              <![CDATA[Newer version [1] of entity [[org.jpwh.model.concurrency.version.Item#1001]] found in database]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.hibernate.OptimisticLockException: Newer version [1] of entity [[org.jpwh.model.concurrency.version.Item#1001]] found in database
	at org.hibernate.action.internal.EntityVerifyVersionProcess.doBeforeTransactionCompletion(EntityVerifyVersionProcess.java:51)
	at org.hibernate.engine.spi.ActionQueue$BeforeTransactionCompletionProcessQueue.beforeTransactionCompletion(ActionQueue.java:706)
	at org.hibernate.engine.spi.ActionQueue.beforeTransactionCompletion(ActionQueue.java:373)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2271)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:485)
	at org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.beforeCompletion(JtaTransactionCoordinatorImpl.java:316)
	at org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorNonTrackingImpl.beforeCompletion(SynchronizationCallbackCoordinatorNonTrackingImpl.java:47)
	at org.hibernate.resource.transaction.backend.jta.internal.synchronization.RegisteredSynchronization.beforeCompletion(RegisteredSynchronization.java:37)
	at bitronix.tm.BitronixTransaction.fireBeforeCompletionEvent(BitronixTransaction.java:532)
	at bitronix.tm.BitronixTransaction.commit(BitronixTransaction.java:235)
	at bitronix.tm.BitronixTransactionManager.commit(BitronixTransactionManager.java:143)
	at org.jpwh.test.concurrency.Versioning.manualVersionChecking(Versioning.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
]]>
            </full-stacktrace>
          </exception> <!-- org.hibernate.OptimisticLockException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- manualVersionChecking -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.concurrency.Versioning@31610302]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.concurrency.Versioning -->
      <class name="org.jpwh.test.concurrency.NonTransactional">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.concurrency.NonTransactional@544fe44c]" name="beforeMethod" is-config="true" duration-ms="60" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.concurrency.NonTransactional@544fe44c]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="autoCommit()[pri:0, instance:org.jpwh.test.concurrency.NonTransactional@544fe44c]" name="autoCommit" duration-ms="14" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- autoCommit -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.concurrency.NonTransactional@544fe44c]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.concurrency.NonTransactional -->
      <class name="org.jpwh.test.concurrency.VersioningTimestamp">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.concurrency.VersioningTimestamp@71318ec4]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.concurrency.VersioningTimestamp@71318ec4]" name="beforeMethod" is-config="true" duration-ms="58" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="firstCommitWins()[pri:0, instance:org.jpwh.test.concurrency.VersioningTimestamp@71318ec4]" name="firstCommitWins" duration-ms="5" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <exception class="javax.persistence.OptimisticLockException">
            <message>
              <![CDATA[Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.persistence.OptimisticLockException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.wrapStaleStateException(AbstractEntityManagerImpl.java:1729)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1634)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1608)
	at org.hibernate.jpa.internal.EntityManagerImpl$CallbackExceptionMapperImpl.mapManagedFlushFailure(EntityManagerImpl.java:235)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2898)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2270)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:485)
	at org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl.beforeCompletion(JtaTransactionCoordinatorImpl.java:316)
	at org.hibernate.resource.transaction.backend.jta.internal.synchronization.SynchronizationCallbackCoordinatorNonTrackingImpl.beforeCompletion(SynchronizationCallbackCoordinatorNonTrackingImpl.java:47)
	at org.hibernate.resource.transaction.backend.jta.internal.synchronization.RegisteredSynchronization.beforeCompletion(RegisteredSynchronization.java:37)
	at bitronix.tm.BitronixTransaction.fireBeforeCompletionEvent(BitronixTransaction.java:532)
	at bitronix.tm.BitronixTransaction.commit(BitronixTransaction.java:235)
	at bitronix.tm.BitronixTransactionManager.commit(BitronixTransactionManager.java:143)
	at org.jpwh.test.concurrency.VersioningTimestamp.firstCommitWins(VersioningTimestamp.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
Caused by: org.hibernate.StaleStateException: Batch update returned unexpected row count from update [0]; actual row count: 0; expected: 1
	at org.hibernate.jdbc.Expectations$BasicExpectation.checkBatched(Expectations.java:67)
	at org.hibernate.jdbc.Expectations$BasicExpectation.verifyOutcome(Expectations.java:54)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3008)
	at org.hibernate.persister.entity.AbstractEntityPersister.updateOrInsert(AbstractEntityPersister.java:2887)
	at org.hibernate.persister.entity.AbstractEntityPersister.update(AbstractEntityPersister.java:3267)
	at org.hibernate.action.internal.EntityUpdateAction.execute(EntityUpdateAction.java:145)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:447)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:333)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:335)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1224)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:464)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2894)
	... 42 more
]]>
            </full-stacktrace>
          </exception> <!-- javax.persistence.OptimisticLockException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstCommitWins -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.concurrency.VersioningTimestamp@71318ec4]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.concurrency.VersioningTimestamp -->
    </test> <!-- Concurrency Control -->
    <test name="Conversations" duration-ms="256" started-at="2015-12-19T20:05:41Z" finished-at="2015-12-19T20:05:41Z">
      <class name="org.jpwh.test.conversation.ExtendedPC">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.conversation.ExtendedPC@4fe3c938]" name="beforeMethod" is-config="true" duration-ms="60" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.conversation.ExtendedPC@4fe3c938]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="conversationCreateItem()[pri:0, instance:org.jpwh.test.conversation.ExtendedPC@4fe3c938]" name="conversationCreateItem" duration-ms="3" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- conversationCreateItem -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.conversation.ExtendedPC@4fe3c938]" name="afterMethod" is-config="true" duration-ms="19" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.conversation.ExtendedPC@4fe3c938]" name="beforeMethod" is-config="true" duration-ms="56" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="conversationEditItem()[pri:0, instance:org.jpwh.test.conversation.ExtendedPC@4fe3c938]" name="conversationEditItem" duration-ms="6" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- conversationEditItem -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.conversation.ExtendedPC@4fe3c938]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.conversation.ExtendedPC -->
      <class name="org.jpwh.test.conversation.Detached">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.conversation.Detached@5383967b]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.conversation.Detached@5383967b]" name="beforeMethod" is-config="true" duration-ms="69" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="businessKeyEquality()[pri:0, instance:org.jpwh.test.conversation.Detached@5383967b]" name="businessKeyEquality" duration-ms="2" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- businessKeyEquality -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.conversation.Detached@5383967b]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.conversation.Detached -->
    </test> <!-- Conversations -->
    <test name="Fetching" duration-ms="2140" started-at="2015-12-19T20:05:41Z" finished-at="2015-12-19T20:05:43Z">
      <class name="org.jpwh.test.fetching.LazyInterception">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.fetching.LazyInterception@3b0143d3]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.LazyInterception@3b0143d3]" name="beforeMethod" is-config="true" duration-ms="58" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lazyBasic()[pri:0, instance:org.jpwh.test.fetching.LazyInterception@3b0143d3]" name="lazyBasic" duration-ms="6" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lazyBasic -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.LazyInterception@3b0143d3]" name="afterMethod" is-config="true" duration-ms="18" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.LazyInterception@3b0143d3]" name="beforeMethod" is-config="true" duration-ms="55" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="noUserProxy()[pri:0, instance:org.jpwh.test.fetching.LazyInterception@3b0143d3]" name="noUserProxy" duration-ms="5" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noUserProxy -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.LazyInterception@3b0143d3]" name="afterMethod" is-config="true" duration-ms="18" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.fetching.LazyInterception -->
      <class name="org.jpwh.test.fetching.CartesianProduct">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.CartesianProduct@6c3708b3]" name="beforeMethod" is-config="true" duration-ms="67" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.fetching.CartesianProduct@6c3708b3]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="fetchCollections()[pri:0, instance:org.jpwh.test.fetching.CartesianProduct@6c3708b3]" name="fetchCollections" duration-ms="8" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchCollections -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.CartesianProduct@6c3708b3]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.fetching.CartesianProduct -->
      <class name="org.jpwh.test.fetching.EagerSelect">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.EagerSelect@185d8b6]" name="beforeMethod" is-config="true" duration-ms="62" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.fetching.EagerSelect@185d8b6]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="fetchEagerSelect()[pri:0, instance:org.jpwh.test.fetching.EagerSelect@185d8b6]" name="fetchEagerSelect" duration-ms="7" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchEagerSelect -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.EagerSelect@185d8b6]" name="afterMethod" is-config="true" duration-ms="18" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.fetching.EagerSelect -->
      <class name="org.jpwh.test.fetching.Subselect">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.fetching.Subselect@6ddf90b0]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.Subselect@6ddf90b0]" name="beforeMethod" is-config="true" duration-ms="61" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="fetchCollectionSubselect()[pri:0, instance:org.jpwh.test.fetching.Subselect@6ddf90b0]" name="fetchCollectionSubselect" duration-ms="10" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchCollectionSubselect -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.Subselect@6ddf90b0]" name="afterMethod" is-config="true" duration-ms="21" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.fetching.Subselect -->
      <class name="org.jpwh.test.fetching.NPlusOneSelects">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.fetching.NPlusOneSelects@2b2948e2]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.NPlusOneSelects@2b2948e2]" name="beforeMethod" is-config="true" duration-ms="61" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="fetchBids()[pri:0, instance:org.jpwh.test.fetching.NPlusOneSelects@2b2948e2]" name="fetchBids" duration-ms="11" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchBids -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.NPlusOneSelects@2b2948e2]" name="afterMethod" is-config="true" duration-ms="151" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.NPlusOneSelects@2b2948e2]" name="beforeMethod" is-config="true" duration-ms="73" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="fetchUsers()[pri:0, instance:org.jpwh.test.fetching.NPlusOneSelects@2b2948e2]" name="fetchUsers" duration-ms="12" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchUsers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.NPlusOneSelects@2b2948e2]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.fetching.NPlusOneSelects -->
      <class name="org.jpwh.test.fetching.ReadOnly">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.fetching.ReadOnly@210366b4]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.ReadOnly@210366b4]" name="beforeMethod" is-config="true" duration-ms="61" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="immutableEntity()[pri:0, instance:org.jpwh.test.fetching.ReadOnly@210366b4]" name="immutableEntity" duration-ms="8" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- immutableEntity -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.ReadOnly@210366b4]" name="afterMethod" is-config="true" duration-ms="19" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.ReadOnly@210366b4]" name="beforeMethod" is-config="true" duration-ms="59" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selectiveReadOnly()[pri:0, instance:org.jpwh.test.fetching.ReadOnly@210366b4]" name="selectiveReadOnly" duration-ms="9" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectiveReadOnly -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.ReadOnly@210366b4]" name="afterMethod" is-config="true" duration-ms="21" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.fetching.ReadOnly -->
      <class name="org.jpwh.test.fetching.Batch">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.fetching.Batch@57536d79]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.Batch@57536d79]" name="beforeMethod" is-config="true" duration-ms="84" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="fetchCollectionBatches()[pri:0, instance:org.jpwh.test.fetching.Batch@57536d79]" name="fetchCollectionBatches" duration-ms="10" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchCollectionBatches -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.Batch@57536d79]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.Batch@57536d79]" name="beforeMethod" is-config="true" duration-ms="62" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="fetchProxyBatches()[pri:0, instance:org.jpwh.test.fetching.Batch@57536d79]" name="fetchProxyBatches" duration-ms="9" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchProxyBatches -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.Batch@57536d79]" name="afterMethod" is-config="true" duration-ms="19" started-at="2015-12-19T12:05:41Z" finished-at="2015-12-19T12:05:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.fetching.Batch -->
      <class name="org.jpwh.test.fetching.EagerJoin">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.fetching.EagerJoin@6f1fba17]" name="beforeClass" is-config="true" duration-ms="1" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.EagerJoin@6f1fba17]" name="beforeMethod" is-config="true" duration-ms="75" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="fetchEagerJoin()[pri:0, instance:org.jpwh.test.fetching.EagerJoin@6f1fba17]" name="fetchEagerJoin" duration-ms="8" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchEagerJoin -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.EagerJoin@6f1fba17]" name="afterMethod" is-config="true" duration-ms="24" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.fetching.EagerJoin -->
      <class name="org.jpwh.test.fetching.LazyProxyCollections">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.fetching.LazyProxyCollections@335eadca]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.LazyProxyCollections@335eadca]" name="beforeMethod" is-config="true" duration-ms="76" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lazyCollections()[pri:0, instance:org.jpwh.test.fetching.LazyProxyCollections@335eadca]" name="lazyCollections" duration-ms="13" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lazyCollections -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.LazyProxyCollections@335eadca]" name="afterMethod" is-config="true" duration-ms="27" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.LazyProxyCollections@335eadca]" name="beforeMethod" is-config="true" duration-ms="67" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="lazyEntityProxies()[pri:0, instance:org.jpwh.test.fetching.LazyProxyCollections@335eadca]" name="lazyEntityProxies" duration-ms="17" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lazyEntityProxies -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.LazyProxyCollections@335eadca]" name="afterMethod" is-config="true" duration-ms="23" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.fetching.LazyProxyCollections -->
      <class name="org.jpwh.test.fetching.Profile">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.Profile@5a8e6209]" name="beforeMethod" is-config="true" duration-ms="65" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.fetching.Profile@5a8e6209]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="fetchWithProfile()[pri:0, instance:org.jpwh.test.fetching.Profile@5a8e6209]" name="fetchWithProfile" duration-ms="9" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchWithProfile -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.Profile@5a8e6209]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.fetching.Profile -->
      <class name="org.jpwh.test.fetching.FetchLoadGraph">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.fetching.FetchLoadGraph@67784306]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.FetchLoadGraph@67784306]" name="beforeMethod" is-config="true" duration-ms="74" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="loadBidBidderItem()[pri:0, instance:org.jpwh.test.fetching.FetchLoadGraph@67784306]" name="loadBidBidderItem" duration-ms="13" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadBidBidderItem -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.FetchLoadGraph@67784306]" name="afterMethod" is-config="true" duration-ms="26" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.FetchLoadGraph@67784306]" name="beforeMethod" is-config="true" duration-ms="60" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="loadBidBidderItemSellerBids()[pri:0, instance:org.jpwh.test.fetching.FetchLoadGraph@67784306]" name="loadBidBidderItemSellerBids" duration-ms="10" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadBidBidderItemSellerBids -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.FetchLoadGraph@67784306]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.FetchLoadGraph@67784306]" name="beforeMethod" is-config="true" duration-ms="61" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="loadItem()[pri:0, instance:org.jpwh.test.fetching.FetchLoadGraph@67784306]" name="loadItem" duration-ms="7" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadItem -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.FetchLoadGraph@67784306]" name="afterMethod" is-config="true" duration-ms="19" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.FetchLoadGraph@67784306]" name="beforeMethod" is-config="true" duration-ms="61" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="loadItemSeller()[pri:0, instance:org.jpwh.test.fetching.FetchLoadGraph@67784306]" name="loadItemSeller" duration-ms="9" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadItemSeller -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.FetchLoadGraph@67784306]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.fetching.FetchLoadGraph -->
      <class name="org.jpwh.test.fetching.EagerQuery">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.EagerQuery@eec5a4a]" name="beforeMethod" is-config="true" duration-ms="57" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.fetching.EagerQuery@eec5a4a]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="fetchBids()[pri:0, instance:org.jpwh.test.fetching.EagerQuery@eec5a4a]" name="fetchBids" duration-ms="11" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchBids -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.EagerQuery@eec5a4a]" name="afterMethod" is-config="true" duration-ms="25" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.fetching.EagerQuery@eec5a4a]" name="beforeMethod" is-config="true" duration-ms="60" started-at="2015-12-19T12:05:42Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="fetchUsers()[pri:0, instance:org.jpwh.test.fetching.EagerQuery@eec5a4a]" name="fetchUsers" duration-ms="10" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchUsers -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.fetching.EagerQuery@eec5a4a]" name="afterMethod" is-config="true" duration-ms="18" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.fetching.EagerQuery -->
    </test> <!-- Fetching -->
    <test name="Filtering" duration-ms="2441" started-at="2015-12-19T20:05:43Z" finished-at="2015-12-19T20:05:46Z">
      <class name="org.jpwh.test.filtering.Cascade">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.filtering.Cascade@10bbd20a]" name="beforeMethod" is-config="true" duration-ms="77" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.filtering.Cascade@10bbd20a]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="detachMerge()[pri:0, instance:org.jpwh.test.filtering.Cascade@10bbd20a]" name="detachMerge" duration-ms="7" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detachMerge -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.filtering.Cascade@10bbd20a]" name="afterMethod" is-config="true" duration-ms="23" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.filtering.Cascade@10bbd20a]" name="beforeMethod" is-config="true" duration-ms="67" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="refresh()[pri:0, instance:org.jpwh.test.filtering.Cascade@10bbd20a]" name="refresh" duration-ms="7" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refresh -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.filtering.Cascade@10bbd20a]" name="afterMethod" is-config="true" duration-ms="23" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.filtering.Cascade@10bbd20a]" name="beforeMethod" is-config="true" duration-ms="69" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="replicate()[pri:0, instance:org.jpwh.test.filtering.Cascade@10bbd20a]" name="replicate" duration-ms="4" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- replicate -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.filtering.Cascade@10bbd20a]" name="afterMethod" is-config="true" duration-ms="23" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.filtering.Cascade -->
      <class name="org.jpwh.test.filtering.Callback">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.filtering.Callback@2d6eabae]" name="beforeMethod" is-config="true" duration-ms="73" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.filtering.Callback@2d6eabae]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="notifyPostPersist()[pri:0, instance:org.jpwh.test.filtering.Callback@2d6eabae]" name="notifyPostPersist" duration-ms="3" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notifyPostPersist -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.filtering.Callback@2d6eabae]" name="afterMethod" is-config="true" duration-ms="18" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.filtering.Callback -->
      <class name="org.jpwh.test.filtering.DynamicFilter">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.filtering.DynamicFilter@23faf8f2]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.filtering.DynamicFilter@23faf8f2]" name="beforeMethod" is-config="true" duration-ms="64" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="filterCollection()[pri:0, instance:org.jpwh.test.filtering.DynamicFilter@23faf8f2]" name="filterCollection" duration-ms="6" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterCollection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.filtering.DynamicFilter@23faf8f2]" name="afterMethod" is-config="true" duration-ms="19" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.filtering.DynamicFilter@23faf8f2]" name="beforeMethod" is-config="true" duration-ms="57" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="filterItems()[pri:0, instance:org.jpwh.test.filtering.DynamicFilter@23faf8f2]" name="filterItems" duration-ms="8" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterItems -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.filtering.DynamicFilter@23faf8f2]" name="afterMethod" is-config="true" duration-ms="23" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.filtering.DynamicFilter -->
      <class name="org.jpwh.test.filtering.AuditLogging">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.filtering.AuditLogging@64729b1e]" name="beforeMethod" is-config="true" duration-ms="59" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.filtering.AuditLogging@64729b1e]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="writeAuditLog()[pri:0, instance:org.jpwh.test.filtering.AuditLogging@64729b1e]" name="writeAuditLog" duration-ms="12" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeAuditLog -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.filtering.AuditLogging@64729b1e]" name="afterMethod" is-config="true" duration-ms="18" started-at="2015-12-19T12:05:43Z" finished-at="2015-12-19T12:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.filtering.AuditLogging -->
      <class name="org.jpwh.test.filtering.Envers">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.filtering.Envers@4e7dc304]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.filtering.Envers@4e7dc304]" name="beforeMethod" is-config="true" duration-ms="1336" started-at="2015-12-19T12:05:44Z" finished-at="2015-12-19T12:05:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="auditLogging()[pri:0, instance:org.jpwh.test.filtering.Envers@4e7dc304]" name="auditLogging" duration-ms="65" started-at="2015-12-19T12:05:45Z" finished-at="2015-12-19T12:05:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- auditLogging -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.filtering.Envers@4e7dc304]" name="afterMethod" is-config="true" duration-ms="379" started-at="2015-12-19T12:05:45Z" finished-at="2015-12-19T12:05:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.filtering.Envers -->
    </test> <!-- Filtering -->
    <test name="Querying" duration-ms="63593" started-at="2015-12-19T20:05:46Z" finished-at="2015-12-19T20:06:49Z">
      <class name="org.jpwh.test.querying.criteria.Selection">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.criteria.Selection@45820e51]" name="beforeMethod" is-config="true" duration-ms="1187" started-at="2015-12-19T12:06:26Z" finished-at="2015-12-19T12:06:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.criteria.Selection@45820e51]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:26Z" finished-at="2015-12-19T12:06:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.criteria.Selection@45820e51]" name="executeQueries" duration-ms="16" started-at="2015-12-19T12:06:27Z" finished-at="2015-12-19T12:06:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.criteria.Selection@45820e51]" name="afterMethod" is-config="true" duration-ms="390" started-at="2015-12-19T12:06:27Z" finished-at="2015-12-19T12:06:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.criteria.Selection -->
      <class name="org.jpwh.test.querying.jpql.Restriction">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.jpql.Restriction@1d8d30f7]" name="beforeMethod" is-config="true" duration-ms="1238" started-at="2015-12-19T12:06:22Z" finished-at="2015-12-19T12:06:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.jpql.Restriction@1d8d30f7]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:22Z" finished-at="2015-12-19T12:06:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.jpql.Restriction@1d8d30f7]" name="executeQueries" duration-ms="19" started-at="2015-12-19T12:06:23Z" finished-at="2015-12-19T12:06:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.jpql.Restriction@1d8d30f7]" name="afterMethod" is-config="true" duration-ms="417" started-at="2015-12-19T12:06:23Z" finished-at="2015-12-19T12:06:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.jpql.Restriction@1d8d30f7]" name="beforeMethod" is-config="true" duration-ms="1402" started-at="2015-12-19T12:06:24Z" finished-at="2015-12-19T12:06:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="executeQueriesWithFunctions()[pri:0, instance:org.jpwh.test.querying.jpql.Restriction@1d8d30f7]" name="executeQueriesWithFunctions" duration-ms="12" started-at="2015-12-19T12:06:25Z" finished-at="2015-12-19T12:06:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueriesWithFunctions -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.jpql.Restriction@1d8d30f7]" name="afterMethod" is-config="true" duration-ms="426" started-at="2015-12-19T12:06:25Z" finished-at="2015-12-19T12:06:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.jpql.Restriction -->
      <class name="org.jpwh.test.querying.advanced.FilterCollections">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.advanced.FilterCollections@6043cd28]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:36Z" finished-at="2015-12-19T12:06:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.advanced.FilterCollections@6043cd28]" name="beforeMethod" is-config="true" duration-ms="1231" started-at="2015-12-19T12:06:36Z" finished-at="2015-12-19T12:06:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.advanced.FilterCollections@6043cd28]" name="executeQueries" duration-ms="18" started-at="2015-12-19T12:06:37Z" finished-at="2015-12-19T12:06:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.advanced.FilterCollections@6043cd28]" name="afterMethod" is-config="true" duration-ms="406" started-at="2015-12-19T12:06:37Z" finished-at="2015-12-19T12:06:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.advanced.FilterCollections -->
      <class name="org.jpwh.test.querying.advanced.HibernateCriteria">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.advanced.HibernateCriteria@587d1d39]" name="beforeMethod" is-config="true" duration-ms="1259" started-at="2015-12-19T12:06:38Z" finished-at="2015-12-19T12:06:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.advanced.HibernateCriteria@587d1d39]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:38Z" finished-at="2015-12-19T12:06:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.advanced.HibernateCriteria@587d1d39]" name="executeQueries" duration-ms="169" started-at="2015-12-19T12:06:39Z" finished-at="2015-12-19T12:06:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.advanced.HibernateCriteria@587d1d39]" name="afterMethod" is-config="true" duration-ms="437" started-at="2015-12-19T12:06:39Z" finished-at="2015-12-19T12:06:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.advanced.HibernateCriteria@587d1d39]" name="beforeMethod" is-config="true" duration-ms="1258" started-at="2015-12-19T12:06:40Z" finished-at="2015-12-19T12:06:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="foo()[pri:0, instance:org.jpwh.test.querying.advanced.HibernateCriteria@587d1d39]" name="foo" duration-ms="11" started-at="2015-12-19T12:06:41Z" finished-at="2015-12-19T12:06:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- foo -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.advanced.HibernateCriteria@587d1d39]" name="afterMethod" is-config="true" duration-ms="434" started-at="2015-12-19T12:06:41Z" finished-at="2015-12-19T12:06:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.advanced.HibernateCriteria -->
      <class name="org.jpwh.test.querying.criteria.Typesafe">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.criteria.Typesafe@6b9651f3]" name="beforeMethod" is-config="true" duration-ms="1326" started-at="2015-12-19T12:06:48Z" finished-at="2015-12-19T12:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.criteria.Typesafe@6b9651f3]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:48Z" finished-at="2015-12-19T12:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.criteria.Typesafe@6b9651f3]" name="executeQueries" duration-ms="10" started-at="2015-12-19T12:06:49Z" finished-at="2015-12-19T12:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.criteria.Typesafe@6b9651f3]" name="afterMethod" is-config="true" duration-ms="574" started-at="2015-12-19T12:06:49Z" finished-at="2015-12-19T12:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.criteria.Typesafe -->
      <class name="org.jpwh.test.querying.criteria.Grouping">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.criteria.Grouping@42d8062c]" name="beforeMethod" is-config="true" duration-ms="1392" started-at="2015-12-19T12:06:29Z" finished-at="2015-12-19T12:06:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.criteria.Grouping@42d8062c]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:29Z" finished-at="2015-12-19T12:06:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.criteria.Grouping@42d8062c]" name="executeQueries" duration-ms="13" started-at="2015-12-19T12:06:30Z" finished-at="2015-12-19T12:06:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.criteria.Grouping@42d8062c]" name="afterMethod" is-config="true" duration-ms="407" started-at="2015-12-19T12:06:30Z" finished-at="2015-12-19T12:06:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.criteria.Grouping -->
      <class name="org.jpwh.test.querying.jpql.Projection">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.jpql.Projection@3d921e20]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:07Z" finished-at="2015-12-19T12:06:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.jpql.Projection@3d921e20]" name="beforeMethod" is-config="true" duration-ms="1375" started-at="2015-12-19T12:06:07Z" finished-at="2015-12-19T12:06:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.jpql.Projection@3d921e20]" name="executeQueries" duration-ms="15" started-at="2015-12-19T12:06:08Z" finished-at="2015-12-19T12:06:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.jpql.Projection@3d921e20]" name="afterMethod" is-config="true" duration-ms="438" started-at="2015-12-19T12:06:08Z" finished-at="2015-12-19T12:06:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.jpql.Projection@3d921e20]" name="beforeMethod" is-config="true" duration-ms="2948" started-at="2015-12-19T12:06:09Z" finished-at="2015-12-19T12:06:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="executeQueriesWithFunctions()[pri:0, instance:org.jpwh.test.querying.jpql.Projection@3d921e20]" name="executeQueriesWithFunctions" duration-ms="10" started-at="2015-12-19T12:06:11Z" finished-at="2015-12-19T12:06:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueriesWithFunctions -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.jpql.Projection@3d921e20]" name="afterMethod" is-config="true" duration-ms="414" started-at="2015-12-19T12:06:11Z" finished-at="2015-12-19T12:06:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.jpql.Projection -->
      <class name="org.jpwh.test.querying.CreateExecuteQueries">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1381" started-at="2015-12-19T12:05:46Z" finished-at="2015-12-19T12:05:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:05:46Z" finished-at="2015-12-19T12:05:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="createHibernateQueries()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="createHibernateQueries" duration-ms="21" started-at="2015-12-19T12:05:47Z" finished-at="2015-12-19T12:05:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createHibernateQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="afterMethod" is-config="true" duration-ms="427" started-at="2015-12-19T12:05:47Z" finished-at="2015-12-19T12:05:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1248" started-at="2015-12-19T12:05:48Z" finished-at="2015-12-19T12:05:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="createNamedQueries()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="createNamedQueries" duration-ms="11" started-at="2015-12-19T12:05:49Z" finished-at="2015-12-19T12:05:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNamedQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="afterMethod" is-config="true" duration-ms="493" started-at="2015-12-19T12:05:49Z" finished-at="2015-12-19T12:05:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1181" started-at="2015-12-19T12:05:49Z" finished-at="2015-12-19T12:05:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="createQueries()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="createQueries" duration-ms="12" started-at="2015-12-19T12:05:51Z" finished-at="2015-12-19T12:05:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="afterMethod" is-config="true" duration-ms="410" started-at="2015-12-19T12:05:51Z" finished-at="2015-12-19T12:05:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1222" started-at="2015-12-19T12:05:51Z" finished-at="2015-12-19T12:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="createTypedQueries()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="createTypedQueries" duration-ms="21" started-at="2015-12-19T12:05:52Z" finished-at="2015-12-19T12:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTypedQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="afterMethod" is-config="true" duration-ms="424" started-at="2015-12-19T12:05:52Z" finished-at="2015-12-19T12:05:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1280" started-at="2015-12-19T12:05:53Z" finished-at="2015-12-19T12:05:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="executeQueries" duration-ms="19" started-at="2015-12-19T12:05:54Z" finished-at="2015-12-19T12:05:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="afterMethod" is-config="true" duration-ms="386" started-at="2015-12-19T12:05:54Z" finished-at="2015-12-19T12:05:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1193" started-at="2015-12-19T12:05:54Z" finished-at="2015-12-19T12:05:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="namedQueries()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="namedQueries" duration-ms="13" started-at="2015-12-19T12:05:56Z" finished-at="2015-12-19T12:05:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- namedQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="afterMethod" is-config="true" duration-ms="430" started-at="2015-12-19T12:05:56Z" finished-at="2015-12-19T12:05:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1228" started-at="2015-12-19T12:05:56Z" finished-at="2015-12-19T12:05:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="pagination()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="pagination" duration-ms="14" started-at="2015-12-19T12:05:57Z" finished-at="2015-12-19T12:05:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pagination -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="afterMethod" is-config="true" duration-ms="418" started-at="2015-12-19T12:05:57Z" finished-at="2015-12-19T12:05:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1810" started-at="2015-12-19T12:05:58Z" finished-at="2015-12-19T12:05:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="parameterBinding()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="parameterBinding" duration-ms="18" started-at="2015-12-19T12:05:59Z" finished-at="2015-12-19T12:05:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parameterBinding -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="afterMethod" is-config="true" duration-ms="420" started-at="2015-12-19T12:05:59Z" finished-at="2015-12-19T12:06:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="beforeMethod" is-config="true" duration-ms="1262" started-at="2015-12-19T12:06:00Z" finished-at="2015-12-19T12:06:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="queryHints()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="queryHints" duration-ms="10" started-at="2015-12-19T12:06:01Z" finished-at="2015-12-19T12:06:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queryHints -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.CreateExecuteQueries@58c1670b]" name="afterMethod" is-config="true" duration-ms="393" started-at="2015-12-19T12:06:01Z" finished-at="2015-12-19T12:06:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.CreateExecuteQueries -->
      <class name="org.jpwh.test.querying.advanced.TransformResults">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.advanced.TransformResults@1a8a8f7c]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:41Z" finished-at="2015-12-19T12:06:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.advanced.TransformResults@1a8a8f7c]" name="beforeMethod" is-config="true" duration-ms="1273" started-at="2015-12-19T12:06:41Z" finished-at="2015-12-19T12:06:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.advanced.TransformResults@1a8a8f7c]" name="executeQueries" duration-ms="11" started-at="2015-12-19T12:06:43Z" finished-at="2015-12-19T12:06:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.advanced.TransformResults@1a8a8f7c]" name="afterMethod" is-config="true" duration-ms="439" started-at="2015-12-19T12:06:43Z" finished-at="2015-12-19T12:06:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.advanced.TransformResults -->
      <class name="org.jpwh.test.querying.sql.JDBCFallback">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.sql.JDBCFallback@9a7504c]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:12Z" finished-at="2015-12-19T12:06:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.sql.JDBCFallback@9a7504c]" name="beforeMethod" is-config="true" duration-ms="1274" started-at="2015-12-19T12:06:12Z" finished-at="2015-12-19T12:06:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="queryItems()[pri:0, instance:org.jpwh.test.querying.sql.JDBCFallback@9a7504c]" name="queryItems" duration-ms="11" started-at="2015-12-19T12:06:13Z" finished-at="2015-12-19T12:06:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queryItems -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.sql.JDBCFallback@9a7504c]" name="afterMethod" is-config="true" duration-ms="446" started-at="2015-12-19T12:06:13Z" finished-at="2015-12-19T12:06:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.sql.JDBCFallback -->
      <class name="org.jpwh.test.querying.jpql.Joins">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.jpql.Joins@3e57cd70]" name="beforeMethod" is-config="true" duration-ms="1234" started-at="2015-12-19T12:06:02Z" finished-at="2015-12-19T12:06:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.jpql.Joins@3e57cd70]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:02Z" finished-at="2015-12-19T12:06:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.jpql.Joins@3e57cd70]" name="executeQueries" duration-ms="22" started-at="2015-12-19T12:06:03Z" finished-at="2015-12-19T12:06:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.jpql.Joins@3e57cd70]" name="afterMethod" is-config="true" duration-ms="389" started-at="2015-12-19T12:06:03Z" finished-at="2015-12-19T12:06:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.jpql.Joins -->
      <class name="org.jpwh.test.querying.criteria.Subselects">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.criteria.Subselects@cb51256]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:34Z" finished-at="2015-12-19T12:06:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.criteria.Subselects@cb51256]" name="beforeMethod" is-config="true" duration-ms="1428" started-at="2015-12-19T12:06:34Z" finished-at="2015-12-19T12:06:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.criteria.Subselects@cb51256]" name="executeQueries" duration-ms="13" started-at="2015-12-19T12:06:36Z" finished-at="2015-12-19T12:06:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.criteria.Subselects@cb51256]" name="afterMethod" is-config="true" duration-ms="446" started-at="2015-12-19T12:06:36Z" finished-at="2015-12-19T12:06:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.criteria.Subselects -->
      <class name="org.jpwh.test.querying.jpql.Selection">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.jpql.Selection@6b57696f]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:14Z" finished-at="2015-12-19T12:06:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.jpql.Selection@6b57696f]" name="beforeMethod" is-config="true" duration-ms="1278" started-at="2015-12-19T12:06:14Z" finished-at="2015-12-19T12:06:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.jpql.Selection@6b57696f]" name="executeQueries" duration-ms="17" started-at="2015-12-19T12:06:15Z" finished-at="2015-12-19T12:06:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.jpql.Selection@6b57696f]" name="afterMethod" is-config="true" duration-ms="559" started-at="2015-12-19T12:06:15Z" finished-at="2015-12-19T12:06:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.jpql.Selection -->
      <class name="org.jpwh.test.querying.criteria.Restriction">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.criteria.Restriction@3234e239]" name="beforeMethod" is-config="true" duration-ms="1238" started-at="2015-12-19T12:06:31Z" finished-at="2015-12-19T12:06:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.criteria.Restriction@3234e239]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:31Z" finished-at="2015-12-19T12:06:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.criteria.Restriction@3234e239]" name="executeQueries" duration-ms="31" started-at="2015-12-19T12:06:32Z" finished-at="2015-12-19T12:06:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.criteria.Restriction@3234e239]" name="afterMethod" is-config="true" duration-ms="435" started-at="2015-12-19T12:06:32Z" finished-at="2015-12-19T12:06:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.criteria.Restriction@3234e239]" name="beforeMethod" is-config="true" duration-ms="1288" started-at="2015-12-19T12:06:32Z" finished-at="2015-12-19T12:06:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="executeQueriesWithFunctions()[pri:0, instance:org.jpwh.test.querying.criteria.Restriction@3234e239]" name="executeQueriesWithFunctions" duration-ms="10" started-at="2015-12-19T12:06:34Z" finished-at="2015-12-19T12:06:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueriesWithFunctions -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.criteria.Restriction@3234e239]" name="afterMethod" is-config="true" duration-ms="419" started-at="2015-12-19T12:06:34Z" finished-at="2015-12-19T12:06:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.criteria.Restriction -->
      <class name="org.jpwh.test.querying.criteria.Joins">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.criteria.Joins@2353b3e6]" name="beforeMethod" is-config="true" duration-ms="1230" started-at="2015-12-19T12:06:17Z" finished-at="2015-12-19T12:06:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.criteria.Joins@2353b3e6]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:17Z" finished-at="2015-12-19T12:06:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.criteria.Joins@2353b3e6]" name="executeQueries" duration-ms="30" started-at="2015-12-19T12:06:18Z" finished-at="2015-12-19T12:06:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.criteria.Joins@2353b3e6]" name="afterMethod" is-config="true" duration-ms="400" started-at="2015-12-19T12:06:18Z" finished-at="2015-12-19T12:06:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.criteria.Joins -->
      <class name="org.jpwh.test.querying.sql.HibernateSQLQueries">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.sql.HibernateSQLQueries@42f93a98]" name="beforeMethod" is-config="true" duration-ms="1335" started-at="2015-12-19T12:06:03Z" finished-at="2015-12-19T12:06:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.sql.HibernateSQLQueries@42f93a98]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:03Z" finished-at="2015-12-19T12:06:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.sql.HibernateSQLQueries@42f93a98]" name="executeQueries" duration-ms="19" started-at="2015-12-19T12:06:05Z" finished-at="2015-12-19T12:06:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.sql.HibernateSQLQueries@42f93a98]" name="afterMethod" is-config="true" duration-ms="414" started-at="2015-12-19T12:06:05Z" finished-at="2015-12-19T12:06:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.sql.HibernateSQLQueries@42f93a98]" name="beforeMethod" is-config="true" duration-ms="1260" started-at="2015-12-19T12:06:05Z" finished-at="2015-12-19T12:06:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="executeRecursiveQueries()[pri:0, instance:org.jpwh.test.querying.sql.HibernateSQLQueries@42f93a98]" name="executeRecursiveQueries" duration-ms="11" started-at="2015-12-19T12:06:06Z" finished-at="2015-12-19T12:06:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeRecursiveQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.sql.HibernateSQLQueries@42f93a98]" name="afterMethod" is-config="true" duration-ms="411" started-at="2015-12-19T12:06:06Z" finished-at="2015-12-19T12:06:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.sql.HibernateSQLQueries -->
      <class name="org.jpwh.test.querying.sql.NativeQueries">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.sql.NativeQueries@2c039ac6]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:43Z" finished-at="2015-12-19T12:06:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.sql.NativeQueries@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1538" started-at="2015-12-19T12:06:43Z" finished-at="2015-12-19T12:06:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.sql.NativeQueries@2c039ac6]" name="executeQueries" duration-ms="17" started-at="2015-12-19T12:06:45Z" finished-at="2015-12-19T12:06:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.sql.NativeQueries@2c039ac6]" name="afterMethod" is-config="true" duration-ms="667" started-at="2015-12-19T12:06:45Z" finished-at="2015-12-19T12:06:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.sql.NativeQueries@2c039ac6]" name="beforeMethod" is-config="true" duration-ms="1767" started-at="2015-12-19T12:06:45Z" finished-at="2015-12-19T12:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="executeRecursiveQueries()[pri:0, instance:org.jpwh.test.querying.sql.NativeQueries@2c039ac6]" name="executeRecursiveQueries" duration-ms="11" started-at="2015-12-19T12:06:47Z" finished-at="2015-12-19T12:06:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeRecursiveQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.sql.NativeQueries@2c039ac6]" name="afterMethod" is-config="true" duration-ms="497" started-at="2015-12-19T12:06:47Z" finished-at="2015-12-19T12:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.sql.NativeQueries -->
      <class name="org.jpwh.test.querying.jpql.Subselects">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.jpql.Subselects@32d2fa64]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:27Z" finished-at="2015-12-19T12:06:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.jpql.Subselects@32d2fa64]" name="beforeMethod" is-config="true" duration-ms="1221" started-at="2015-12-19T12:06:27Z" finished-at="2015-12-19T12:06:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.jpql.Subselects@32d2fa64]" name="executeQueries" duration-ms="11" started-at="2015-12-19T12:06:29Z" finished-at="2015-12-19T12:06:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.jpql.Subselects@32d2fa64]" name="afterMethod" is-config="true" duration-ms="423" started-at="2015-12-19T12:06:29Z" finished-at="2015-12-19T12:06:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.jpql.Subselects -->
      <class name="org.jpwh.test.querying.jpql.Grouping">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.jpql.Grouping@c46bcd4]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:15Z" finished-at="2015-12-19T12:06:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.jpql.Grouping@c46bcd4]" name="beforeMethod" is-config="true" duration-ms="1208" started-at="2015-12-19T12:06:15Z" finished-at="2015-12-19T12:06:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.jpql.Grouping@c46bcd4]" name="executeQueries" duration-ms="11" started-at="2015-12-19T12:06:17Z" finished-at="2015-12-19T12:06:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.jpql.Grouping@c46bcd4]" name="afterMethod" is-config="true" duration-ms="401" started-at="2015-12-19T12:06:17Z" finished-at="2015-12-19T12:06:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.jpql.Grouping -->
      <class name="org.jpwh.test.querying.criteria.Projection">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.criteria.Projection@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="1224" started-at="2015-12-19T12:06:19Z" finished-at="2015-12-19T12:06:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.querying.criteria.Projection@5bb21b69]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:19Z" finished-at="2015-12-19T12:06:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="executeQueries()[pri:0, instance:org.jpwh.test.querying.criteria.Projection@5bb21b69]" name="executeQueries" duration-ms="21" started-at="2015-12-19T12:06:20Z" finished-at="2015-12-19T12:06:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueries -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.criteria.Projection@5bb21b69]" name="afterMethod" is-config="true" duration-ms="535" started-at="2015-12-19T12:06:20Z" finished-at="2015-12-19T12:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.querying.criteria.Projection@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="1257" started-at="2015-12-19T12:06:21Z" finished-at="2015-12-19T12:06:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="executeQueriesWithFunctions()[pri:0, instance:org.jpwh.test.querying.criteria.Projection@5bb21b69]" name="executeQueriesWithFunctions" duration-ms="8" started-at="2015-12-19T12:06:22Z" finished-at="2015-12-19T12:06:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeQueriesWithFunctions -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.querying.criteria.Projection@5bb21b69]" name="afterMethod" is-config="true" duration-ms="401" started-at="2015-12-19T12:06:22Z" finished-at="2015-12-19T12:06:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.querying.criteria.Projection -->
    </test> <!-- Querying -->
    <test name="Custom SQL" duration-ms="2372" started-at="2015-12-19T20:06:49Z" finished-at="2015-12-19T20:06:52Z">
      <class name="org.jpwh.test.customsql.CustomSQL">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.customsql.CustomSQL@46daef40]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:49Z" finished-at="2015-12-19T12:06:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.customsql.CustomSQL@46daef40]" name="beforeMethod" is-config="true" duration-ms="445" started-at="2015-12-19T12:06:49Z" finished-at="2015-12-19T12:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="delete()[pri:0, instance:org.jpwh.test.customsql.CustomSQL@46daef40]" name="delete" duration-ms="13" started-at="2015-12-19T12:06:50Z" finished-at="2015-12-19T12:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.customsql.CustomSQL@46daef40]" name="afterMethod" is-config="true" duration-ms="138" started-at="2015-12-19T12:06:50Z" finished-at="2015-12-19T12:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.customsql.CustomSQL@46daef40]" name="beforeMethod" is-config="true" duration-ms="424" started-at="2015-12-19T12:06:50Z" finished-at="2015-12-19T12:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="read()[pri:0, instance:org.jpwh.test.customsql.CustomSQL@46daef40]" name="read" duration-ms="8" started-at="2015-12-19T12:06:50Z" finished-at="2015-12-19T12:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- read -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.customsql.CustomSQL@46daef40]" name="afterMethod" is-config="true" duration-ms="145" started-at="2015-12-19T12:06:50Z" finished-at="2015-12-19T12:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.customsql.CustomSQL@46daef40]" name="beforeMethod" is-config="true" duration-ms="436" started-at="2015-12-19T12:06:51Z" finished-at="2015-12-19T12:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="readRestrictedCollection()[pri:0, instance:org.jpwh.test.customsql.CustomSQL@46daef40]" name="readRestrictedCollection" duration-ms="5" started-at="2015-12-19T12:06:51Z" finished-at="2015-12-19T12:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readRestrictedCollection -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.customsql.CustomSQL@46daef40]" name="afterMethod" is-config="true" duration-ms="154" started-at="2015-12-19T12:06:51Z" finished-at="2015-12-19T12:06:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.customsql.CustomSQL@46daef40]" name="beforeMethod" is-config="true" duration-ms="450" started-at="2015-12-19T12:06:51Z" finished-at="2015-12-19T12:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="update()[pri:0, instance:org.jpwh.test.customsql.CustomSQL@46daef40]" name="update" duration-ms="4" started-at="2015-12-19T12:06:52Z" finished-at="2015-12-19T12:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.customsql.CustomSQL@46daef40]" name="afterMethod" is-config="true" duration-ms="147" started-at="2015-12-19T12:06:52Z" finished-at="2015-12-19T12:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.customsql.CustomSQL -->
    </test> <!-- Custom SQL -->
    <test name="Serialization" duration-ms="0" started-at="2015-12-19T20:06:52Z" finished-at="2015-12-19T20:06:52Z">
    </test> <!-- Serialization -->
    <test name="Scaling" duration-ms="12415" started-at="2015-12-19T20:06:52Z" finished-at="2015-12-19T20:07:04Z">
      <class name="org.jpwh.test.bulkbatch.BulkStatementsSQL">
        <test-method status="PASS" signature="beforeSuite(java.lang.String, java.lang.String)[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsSQL@7cbd213e]" name="beforeSuite" is-config="true" duration-ms="154" started-at="2015-12-19T12:05:20Z" finished-at="2015-12-19T12:05:20Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsSQL@7cbd213e]" name="beforeClass" is-config="true" duration-ms="1" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsSQL@7cbd213e]" name="beforeMethod" is-config="true" duration-ms="93" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="bulkUpdate()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsSQL@7cbd213e]" name="bulkUpdate" duration-ms="8" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bulkUpdate -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsSQL@7cbd213e]" name="afterMethod" is-config="true" duration-ms="28" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsSQL@7cbd213e]" name="beforeMethod" is-config="true" duration-ms="195" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="bulkUpdateHibernate()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsSQL@7cbd213e]" name="bulkUpdateHibernate" duration-ms="28" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bulkUpdateHibernate -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsSQL@7cbd213e]" name="afterMethod" is-config="true" duration-ms="90" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsSQL@7cbd213e]" name="afterSuite" is-config="true" duration-ms="232" started-at="2015-12-19T12:07:04Z" finished-at="2015-12-19T12:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- org.jpwh.test.bulkbatch.BulkStatementsSQL -->
      <class name="org.jpwh.test.bulkbatch.BatchInsertUpdate">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.bulkbatch.BatchInsertUpdate@33723e30]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:06:52Z" finished-at="2015-12-19T12:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BatchInsertUpdate@33723e30]" name="beforeMethod" is-config="true" duration-ms="88" started-at="2015-12-19T12:06:52Z" finished-at="2015-12-19T12:06:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="batchInsertUpdate()[pri:0, instance:org.jpwh.test.bulkbatch.BatchInsertUpdate@33723e30]" name="batchInsertUpdate" duration-ms="6729" started-at="2015-12-19T12:06:52Z" finished-at="2015-12-19T12:06:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- batchInsertUpdate -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BatchInsertUpdate@33723e30]" name="afterMethod" is-config="true" duration-ms="27" started-at="2015-12-19T12:06:59Z" finished-at="2015-12-19T12:06:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BatchInsertUpdate@33723e30]" name="beforeMethod" is-config="true" duration-ms="67" started-at="2015-12-19T12:06:59Z" finished-at="2015-12-19T12:06:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="batchInsertUpdateWithStatelessSession()[pri:0, instance:org.jpwh.test.bulkbatch.BatchInsertUpdate@33723e30]" name="batchInsertUpdateWithStatelessSession" duration-ms="3317" started-at="2015-12-19T12:06:59Z" finished-at="2015-12-19T12:07:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- batchInsertUpdateWithStatelessSession -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BatchInsertUpdate@33723e30]" name="afterMethod" is-config="true" duration-ms="24" started-at="2015-12-19T12:07:02Z" finished-at="2015-12-19T12:07:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.bulkbatch.BatchInsertUpdate -->
      <class name="org.jpwh.test.bulkbatch.BulkStatementsJPQL">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsJPQL@64f6106c]" name="beforeClass" is-config="true" duration-ms="1" started-at="2015-12-19T12:07:04Z" finished-at="2015-12-19T12:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsJPQL@64f6106c]" name="beforeMethod" is-config="true" duration-ms="136" started-at="2015-12-19T12:07:04Z" finished-at="2015-12-19T12:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="bulkDelete()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsJPQL@64f6106c]" name="bulkDelete" duration-ms="9" started-at="2015-12-19T12:07:04Z" finished-at="2015-12-19T12:07:04Z">
          <exception class="javax.persistence.EntityNotFoundException">
            <message>
              <![CDATA[No row with the given identifier exists: [org.jpwh.model.bulkbatch.CreditCard#302]]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.persistence.EntityNotFoundException: No row with the given identifier exists: [org.jpwh.model.bulkbatch.CreditCard#302]
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1674)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1619)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.refresh(AbstractEntityManagerImpl.java:1234)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.refresh(AbstractEntityManagerImpl.java:1192)
	at org.jpwh.test.bulkbatch.BulkStatementsJPQL.bulkDelete(BulkStatementsJPQL.java:214)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
]]>
            </full-stacktrace>
          </exception> <!-- javax.persistence.EntityNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bulkDelete -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsJPQL@64f6106c]" name="afterMethod" is-config="true" duration-ms="53" started-at="2015-12-19T12:07:04Z" finished-at="2015-12-19T12:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsJPQL@64f6106c]" name="beforeMethod" is-config="true" duration-ms="88" started-at="2015-12-19T12:07:04Z" finished-at="2015-12-19T12:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="bulkInsert()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsJPQL@64f6106c]" name="bulkInsert" duration-ms="12" started-at="2015-12-19T12:07:04Z" finished-at="2015-12-19T12:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bulkInsert -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsJPQL@64f6106c]" name="afterMethod" is-config="true" duration-ms="24" started-at="2015-12-19T12:07:04Z" finished-at="2015-12-19T12:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsJPQL@64f6106c]" name="beforeMethod" is-config="true" duration-ms="70" started-at="2015-12-19T12:07:04Z" finished-at="2015-12-19T12:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="bulkUpdate()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsJPQL@64f6106c]" name="bulkUpdate" duration-ms="7" started-at="2015-12-19T12:07:04Z" finished-at="2015-12-19T12:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bulkUpdate -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsJPQL@64f6106c]" name="afterMethod" is-config="true" duration-ms="34" started-at="2015-12-19T12:07:04Z" finished-at="2015-12-19T12:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsJPQL@64f6106c]" name="beforeMethod" is-config="true" duration-ms="75" started-at="2015-12-19T12:07:04Z" finished-at="2015-12-19T12:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="bulkUpdateInheritance()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsJPQL@64f6106c]" name="bulkUpdateInheritance" duration-ms="7" started-at="2015-12-19T12:07:04Z" finished-at="2015-12-19T12:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bulkUpdateInheritance -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsJPQL@64f6106c]" name="afterMethod" is-config="true" duration-ms="21" started-at="2015-12-19T12:07:04Z" finished-at="2015-12-19T12:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsJPQL@64f6106c]" name="beforeMethod" is-config="true" duration-ms="69" started-at="2015-12-19T12:07:04Z" finished-at="2015-12-19T12:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="bulkUpdateVersioned()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsJPQL@64f6106c]" name="bulkUpdateVersioned" duration-ms="5" started-at="2015-12-19T12:07:04Z" finished-at="2015-12-19T12:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bulkUpdateVersioned -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsJPQL@64f6106c]" name="afterMethod" is-config="true" duration-ms="28" started-at="2015-12-19T12:07:04Z" finished-at="2015-12-19T12:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.bulkbatch.BulkStatementsJPQL -->
      <class name="org.jpwh.test.cache.SecondLevel">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.cache.SecondLevel@553a3d88]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:07:02Z" finished-at="2015-12-19T12:07:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.cache.SecondLevel@553a3d88]" name="beforeMethod" is-config="true" duration-ms="158" started-at="2015-12-19T12:07:02Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="cacheBehavior()[pri:0, instance:org.jpwh.test.cache.SecondLevel@553a3d88]" name="cacheBehavior" duration-ms="80" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cacheBehavior -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.cache.SecondLevel@553a3d88]" name="afterMethod" is-config="true" duration-ms="32" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.cache.SecondLevel@553a3d88]" name="beforeMethod" is-config="true" duration-ms="74" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="cacheControl()[pri:0, instance:org.jpwh.test.cache.SecondLevel@553a3d88]" name="cacheControl" duration-ms="10" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cacheControl -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.cache.SecondLevel@553a3d88]" name="afterMethod" is-config="true" duration-ms="28" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.cache.SecondLevel@553a3d88]" name="beforeMethod" is-config="true" duration-ms="75" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="cacheModes()[pri:0, instance:org.jpwh.test.cache.SecondLevel@553a3d88]" name="cacheModes" duration-ms="13" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cacheModes -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.cache.SecondLevel@553a3d88]" name="afterMethod" is-config="true" duration-ms="25" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.cache.SecondLevel@553a3d88]" name="beforeMethod" is-config="true" duration-ms="73" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="cacheNaturalId()[pri:0, instance:org.jpwh.test.cache.SecondLevel@553a3d88]" name="cacheNaturalId" duration-ms="12" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cacheNaturalId -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.cache.SecondLevel@553a3d88]" name="afterMethod" is-config="true" duration-ms="52" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.cache.SecondLevel@553a3d88]" name="beforeMethod" is-config="true" duration-ms="75" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="cacheQueryResults()[pri:0, instance:org.jpwh.test.cache.SecondLevel@553a3d88]" name="cacheQueryResults" duration-ms="17" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cacheQueryResults -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.cache.SecondLevel@553a3d88]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:07:03Z" finished-at="2015-12-19T12:07:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.cache.SecondLevel -->
      <class name="org.jpwh.test.bulkbatch.BulkStatementsCriteria">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsCriteria@3ecd23d9]" name="beforeMethod" is-config="true" duration-ms="79" started-at="2015-12-19T12:07:02Z" finished-at="2015-12-19T12:07:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsCriteria@3ecd23d9]" name="beforeClass" is-config="true" duration-ms="0" started-at="2015-12-19T12:07:02Z" finished-at="2015-12-19T12:07:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="bulkDelete()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsCriteria@3ecd23d9]" name="bulkDelete" duration-ms="17" started-at="2015-12-19T12:07:02Z" finished-at="2015-12-19T12:07:02Z">
          <exception class="javax.persistence.EntityNotFoundException">
            <message>
              <![CDATA[No row with the given identifier exists: [org.jpwh.model.bulkbatch.CreditCard#302]]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.persistence.EntityNotFoundException: No row with the given identifier exists: [org.jpwh.model.bulkbatch.CreditCard#302]
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1674)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1619)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.refresh(AbstractEntityManagerImpl.java:1234)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.refresh(AbstractEntityManagerImpl.java:1192)
	at org.jpwh.test.bulkbatch.BulkStatementsCriteria.bulkDelete(BulkStatementsCriteria.java:219)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:122)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)
]]>
            </full-stacktrace>
          </exception> <!-- javax.persistence.EntityNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bulkDelete -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsCriteria@3ecd23d9]" name="afterMethod" is-config="true" duration-ms="23" started-at="2015-12-19T12:07:02Z" finished-at="2015-12-19T12:07:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsCriteria@3ecd23d9]" name="beforeMethod" is-config="true" duration-ms="83" started-at="2015-12-19T12:07:02Z" finished-at="2015-12-19T12:07:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="bulkUpdate()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsCriteria@3ecd23d9]" name="bulkUpdate" duration-ms="10" started-at="2015-12-19T12:07:02Z" finished-at="2015-12-19T12:07:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bulkUpdate -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsCriteria@3ecd23d9]" name="afterMethod" is-config="true" duration-ms="24" started-at="2015-12-19T12:07:02Z" finished-at="2015-12-19T12:07:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsCriteria@3ecd23d9]" name="beforeMethod" is-config="true" duration-ms="66" started-at="2015-12-19T12:07:02Z" finished-at="2015-12-19T12:07:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="bulkUpdateVersioned()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsCriteria@3ecd23d9]" name="bulkUpdateVersioned" duration-ms="6" started-at="2015-12-19T12:07:02Z" finished-at="2015-12-19T12:07:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bulkUpdateVersioned -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.jpwh.test.bulkbatch.BulkStatementsCriteria@3ecd23d9]" name="afterMethod" is-config="true" duration-ms="22" started-at="2015-12-19T12:07:02Z" finished-at="2015-12-19T12:07:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- org.jpwh.test.bulkbatch.BulkStatementsCriteria -->
    </test> <!-- Scaling -->
  </suite> <!-- AllTests - examples -->
</testng-results>
